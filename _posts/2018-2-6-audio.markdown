---
layout: post
title:  音频常识, 区块链
category: technology 
---

# 音频常识

## 人的听觉范围

![](/images/article/sound.png)

图上的上限是到16KHz，但并不是说16KHz以上听不到了，因为高频听力随着年龄增长而减弱直到丧失，一般来说25岁以上的人，在16KHz以上的听力几乎完全丧失，而10几岁的人，完全可以听到19KHz左右的声音（这就是有一种传说中的蚊音手机铃声神马的，在中学生间流传很广，据说老师听不到只有学生能听到，也是基于这个道理）。

## 各种编解码算法比较

http://www.rosoo.net/a/201012/10600.html

speech codec (G.711, G.723, G.726, G.729, iLBC)

这个帖子比较了ITU提出的G系列的各种语音编解码方案。

![](/images/article/audio.jpg)

上图是各种音频编解码框架的比较图。

其中narrowband是指频率在4kHz以下的声音信号，一般情况下，人的说话声就位于这个频率范围内，因此又被称为“语音”。

allband是指频率在24kHz以下的声音信号。这也是人耳所能听到的频率范围。这个范围内的声音统称“音频”。

介于两者之间的，被称为wideband。

>早年上网用的Modem，之所以速度上限仅为56kbs，其实主要是因为它占用的是普通电话信道，而56kbs对于电话来说，已经是绰绰有余了。

## 声道

声道一般表示为X.Y的形式，其中X为高音音箱的个数，Y为低音音箱的个数。比如常见的2.1声道，就是左音箱、右音箱+低音音箱（俗称低音炮）。

一般来说，Y的值为0或1。而X的值，有以下几种：

1.X=1。单声道

2.X=2。左、右。

3.X=4。前左、前右，后左、后右。

4.X=5。前左、前右，后左、后右、中置。

5.X=7。前左、前右，后左、后右、中置、中左、中右。

## 数字功放

![](/images/article/tas5731_2_1.png)

上图是TI TAS5731M的2.1声道应用图。

其中的SE，表示单端连接模式（Single-End），和桥接式负载 BTL（Bridge-Tied-Load）相对应。后者在同等供电电压和负载的情况下，可以提供4倍于SE的输出功率，并具有良好的低频响应，常用于连接低音音箱。

![](/images/article/digital_audio.png)

这是TI TAS5731M数字音频的处理流程，其中上两路是高音声道，最下面一路是低音声道。

## IIS

亦称I2S。Inter—IC Sound总线是飞利浦公司为数字音频设备之间的音频数据传输而制定的一种总线标准，该总线专责于音频设备之间的数据传输，广泛应用于各种多媒体系统。

I2S总线由4根线组成：

1.SDATA。数据线，根据方向的不同，又分为SDO和SDI。一根数据线可以传输两个声道的数据，但对于当前越来越多的声道来说，这显然就不够用了。因此目前的MCU设计中，多数都集成了更多的SDO线。这些SDO线共享各种时钟线。多SDO线的DMA传输，一般采用时分复用的交错数据流的方式来设置。

2.LRCK，(也称WS)。帧时钟，用于切换左右声道的数据。LRCK为“1”表示正在传输的是右声道的数据，为“0”则表示正在传输的是左声道的数据。LRCK的频率等于采样频率。

3.SCLK，也叫位时钟（BCLK）。1个脉冲对应数字音频的每一位数据。SCLK的频率=2×采样频率×采样位数。

4.MCLK，称为主时钟，也叫系统时钟（Sys Clock），是采样频率的256倍或384倍。它可以使系统间能够更好地同步。

I2S总线的性能主要由以下指标决定：

1.采样频率。根据上面对narrowband、wideband、allband的讨论，以及采样定理可知，采样频率最低为8kHz，超过48kHz可以算是allband。

2.采样位数。越大越好。目前数字功放（如TI TAS5731M）已经可以支持24bit和32bit，但wifi芯片基本还是16bit的。

I2S总线的时序标准分为三种：

1.I2S。

2.Left-Justified

3.Right-Justified

I2S总线在硬件测试时，可播放1KHz正弦波的wav文件。这个wav文件的频率，在人的声觉最敏感的范围（1KHz~4KHz）内，同时也便于示波器观察模拟端的输出信号。

## 文件后缀名与编码格式

<table>
  <tr>
    <th>文件后缀名</th>
    <th>音频编码（空表示编码格式和文件后缀名一致）</th>
    <th>视频编码（空表示该格式没有视频数据）</th>
  </tr>
  <tr>
    <td>.aac .ac3 .ape .mp2 .mp3 .flac .wma</td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td>.au</td>
    <td>pcm_s16be</td>
    <td></td>
  </tr>
  <tr>
    <td>.wav</td>
    <td>pcm_s16le pcm_float</td>
    <td></td>
  </tr>
  <tr>
    <td>.ogg</td>
    <td>vorbis</td>
    <td></td>
  </tr>
  <tr>
    <td>.m4a</td>
    <td>mpeg4 aac</td>
    <td></td>
  </tr>
  <tr>
    <td>.3gp</td>
    <td>mpeg4</td>
    <td>amr_nb</td>
  </tr>
  <tr>
    <td>.3g2</td>
    <td>mpeg4</td>
    <td>mpeg4 aac</td>
  </tr>
  <tr>
    <td>.asf</td>
    <td>msmpeg4</td>
    <td>mp3</td>
  </tr>
  <tr>
    <td>.mov</td>
    <td>mpeg4_qt</td>
    <td>mpeg4 aac_qt</td>
  </tr>
  <tr>
    <td>.rm</td>
    <td>rv10</td>
    <td>ac3</td>
  </tr>
  <tr>
    <td>.vob</td>
    <td>mpeg2</td>
    <td>ac3</td>
  </tr>
  <tr>
    <td>.wmv</td>
    <td>wmv</td>
    <td>wma</td>
  </tr>
</table>

常用格式中的.avi .mp4，由于支持的编码格式众多，且没有主要的使用格式，故不列出。

## 术语

Pre-emphasis,预加重。与之对应的是De-emphasis去加重。是一项关于噪声整形的技术。

## 开源音频编解码包

## 1.Speex

http://speex.org/

一个老项目，教程多，但官方已经放弃，转而推荐Opus。

## 2.Opus

http://opus-codec.org/

最近的一个新项目，基于IETF RFC 6716（2012.9）。由于比较新，教程很少。

## 3.G.726等一系列算法代码

http://www.itu.int/rec/T-REC-G.191-201003-I/en

ITU官网上的工具包，包含了G.711和G.726算法。

# 区块链

比特币闻名已久，大概2009年时，我就听说过，然而一直没有研究它的原理。直到最近比特币大火，方才有所研究。不过这个东西，不太合我的研究兴趣，所以也就简单写一些吧。

## 结构

![](/images/img2/blockchain.png)

上图是区块链的结构图。它是由若干个Block链接而成的单向链表。

## Block的生成

以比特币为例，Block由特殊算法计算生成。每个Block包含一定数量的比特币。为了得到比特币，人们就需要计算，这个行为被称为“挖矿”。

“挖矿”得到的Block需要添加到现有Block chain的末端。这实际上导致了以下问题：

1.同一时间只有一个Block能够添加到Block chain。这导致比特币的交易速度不可能很快。这也是一些新的区块链协议所要改进的方向。

2.所有的历史交易记录都保存在Block chain中。比如可用以下网址查询历史记录：

https://blockchain.info/zh-cn/block-height/254642

可以想象随着交易的进行，这个链会越来越大。由于每个钱包都有特定的秘钥，虽然我们不能直接知道它的主人，但是通过对历史数据的分析，还是很有可能找到蛛丝马迹的。因此，一些山寨币开始使用更高端的加密算法，提供更好的匿名性。

## 比特币的交易

Block的绝大多数空间都用于保存交易记录。因此，矿工除了挖出新Block之外，还要负责将新的交易数据写进Block，这个行为被称为“打包”。

打包可以收取手续费，以获得更高的打包优先级。在中本聪的设想中，这是在挖矿越来越难的时候，保证比特币运作的一种方式。

## 区块链的安全性

1.块中有用于检验数据完整性的字段，这个完整性不仅包括本Block的完整性，还包括之前Block数据的完整性。因此，篡改者必须对被修改的Block之后的所有Block都进行修改才行。

2.修改需要得到多数结点确认才可以生效。理论来说，如果有组织掌握全网51%的算力，那么他们就可以为所欲为了。

## 各种数字货币

![](/images/article/bit_coin.png)

## 以太坊

虽然，比特币一直是区块链技术的主角，但毕竟创建的年代已经久远，技术局限较多。以太坊不仅是数字货币，而且还是很多其它数字货币的发行平台，提供了一系列完善的数字货币发行和流通服务，当然服务的费用需要通过购买以太坊币来支付。目前，很多山寨币都是利用以太坊进行发布的。

官网：

https://www.ethereum.org/

以太坊的API是一个叫做Solidity的项目。代码会被编译运行在所谓的Ethereum Virtual Machine (EVM)上。

Solidity文档：

https://solidity.readthedocs.io/

参考：

https://zhuanlan.zhihu.com/p/32796998

10分钟搞定ICO

## 矿机江湖

### 2018.9

https://mp.weixin.qq.com/s/yyoUoIUBUPV5zkeE88P7Iw

矿机芯片：转型背后的江湖纷争与隐忧

这篇文章把中国矿机界的几个主角的恩恩怨怨基本都讲了一遍，不错的江湖文章。

只是比特币这东西价格起起落落，2018年第一季度，比特大陆豪赚20亿美元，利润甚至超过了近年风头甚高的NVIDIA，岂料第二季度，形势急转直下，坊间甚至有比特大陆亏损6、7亿美元的传闻。

至于比特大陆的AI芯片，似乎对标的是NVIDIA的云服务领域。不是我小看比特大陆，AI芯片这东西光有钱，没有时间积累，是做不好的。

### 2018.11

http://finance.sina.com.cn/blockchain/roll/2018-11-16/doc-ihnvukff8764739.shtml

算力之战：告诉你吴忌寒是怎么赢的 CSW是怎么输的

### 2019.1

http://tech.sina.com.cn/i/2018-10-10/doc-ihkvrhpt4844011.shtml

矿机围城里的比特大陆：研发持续落后 公司四面楚歌

詹克团、吴忌寒、杨作兴

# 名校机器学习相关课程+

https://sites.google.com/view/berkeley-cs294-158-sp19/home

UCB CS294-158: Deep Unsupervised Learning

https://github.com/mbinary/USTC-CS-Courses-Resource

中国科学技术大学计算机学院课程资源

https://mp.weixin.qq.com/s/iQpERylxzfQ0P51AQBj8bA

概率论导论-哈佛和斯坦福大学合著630页新书

https://people.csail.mit.edu/madry/6.883/

6.883 Science of Deep Learning: Bridging Theory and Practice

https://fullstackdeeplearning.com/march2019

UCB: Full Stack Deep Learning。这个课程是专门讲述如何部署DL工程到实际产品中。

http://web.stanford.edu/class/cs246/

CS246: Mining Massive Data Sets

https://mp.weixin.qq.com/s/P7szDhvn5QNRKc7Iuq3Q6g

UAI 2019教程《深度学习数学基础》
