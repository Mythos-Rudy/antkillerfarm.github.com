---
layout: post
title:  Hbase, Docker, Pulsar
category: AI 
---

# Hbase

官网：

http://hbase.apache.org/

快速开始：

http://hbase.apache.org/book.html#quickstart

启动脚本：

1.HDFS

`sbin/start-dfs.sh`

2.Hbase

`bin/start-hbase.sh`

参考：

http://www.cnblogs.com/cenyuhai/

这个blog专注于hadoop、hbase、spark。

http://www.cnblogs.com/nexiyi/p/hbase_shell.html

HBase的常用Shell命令

http://www.cnblogs.com/Dreama/articles/2219190.html

Hadoop+HBase伪分布式安装配置

https://sourceforge.net/projects/haredbhbaseclie/

HareDB HBase Client是一个Hbase的Web GUI客户端，比较好用。

## 基本概念

HBase以表的形式存储数据。表有行和列组成。列划分为若干个列族/列簇(column family)。

<table>
<tr>
<td rowspan="2"><strong>Row Key</strong></td>
<td colspan="2"><strong>column-family1</strong></td>
<td colspan="3"><strong>column-family2</strong></td>
<td><strong>column-family3</strong></td></tr>
<tr>
<td><strong>column1</strong></td>
<td><strong>column2</strong></td>
<td><strong>column1</strong></td>
<td><strong>column2</strong></td>
<td><strong>column3</strong></td>
<td><strong>column1</strong></td></tr>
<tr>
<td><strong>key1</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td></tr>
<tr>
<td><strong>key2</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td></tr>
<tr>
<td><strong>key3</strong></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td></tr></table>

如上图所示，key1,key2,key3是三条记录的唯一的row key值，column-family1,column-family2,column-family3是三个列族，每个列族下又包括几列。比如，column-family1这个列族下包括两列，名字是column1和column2。

HBase中，将一个Column Family中的列存在一起，而不同Column Family的数据则分开。

不要在一张表里定义太多的column family。目前Hbase并不能很好的处理超过2~3个column family的表。因为某个column family在flush的时候，它邻近的column family也会因关联效应被触发flush，最终导致系统产生更多的I/O。

吐槽一下。既然2~3个column family的表都支持的不好，那么似乎表明column family在现阶段只是一个设计的概念，离实用尚有距离。这样做的用意，大概是期待有一天Hbase把这个特性做好之后，上层应用可以无须修改吧。

参考：

https://mp.weixin.qq.com/s/ElmuT_Z2UIavFKUlSM7rZw

HBase RowKey与索引设计

## HBase架构

![](/images/article/hbase.jpg)

HBase在物理上是HDFS上的文件，因此它也是主从结构的。

## 常用的HBase Shell命令

这些命令可在hbase的控制台输入。进入控制台：

`bin/hbase shell`

| 名称 | 命令表达式 |
|:--|:--|
| 查看当前用户 | whoami |
| 创建表 | create '表名称', '列名称1','列名称2','列名称N' |
| 添加记录 | put '表名称', '行名称', '列名称:', '值' |
| 查看记录 | get '表名称', '行名称' |
| 查看表中的记录总数 | count  '表名称' |
| 删除记录 | delete  '表名' ,'行名称' , '列名称' |
| 删除一张表 | 先要禁用该表，才能对该表进行删除，第一步 disable '表名称' 第二步  drop '表名称' |
| 查看所有记录 | scan "表名称" |
| 查看某个表某个列中所有数据 | scan "表名称" , ['列名称:'] |
| 更新记录 | 就是重写一遍进行覆盖 |

## 二级索引

原生态的HBase由于是按列存储的key-value对，原则上只能通过key查询value，因此无法创建主键之外的索引。然而，二级索引在当前的数据应用中，已经相当普遍了。如何解决这一问题呢？

**方法一**：将需要创建键的若干列的内容放到key中。比如，某数据表需要对日期和地点建索引，则key的值可以写成“2017-北京”这样的形式。

这个方法的缺点在于，放入key中的列相当于是行存储结构，会降低查询效率。设想一下，如果所有列都放到key中，那么实际上这个数据表就退化成了普通的按行存储的关系数据库了。

一般来说，采用方法一的数据表其key中包含的列数不应超过10个。

**方法二**：外挂二级索引库。目前主要实现的方案有ITHBase，IHBase，CCIndex，华为二级索引和360二级索引等。这些方案的实现细节虽有差异，但原理上都差不多，即：在数据本身之外，创建专门的数据结构用于存放二级索引。

细节可参考：

http://blog.csdn.net/dhtx_wzgl/article/details/49423979

HBase学习之二级索引

## OpenTSDB

OpenTSDB（Time Series Database）是一个基于HBase的存放时序数据的数据库。

官网：

http://opentsdb.net/

DB这个词很有误导性，其实它并不是一个db，单独一个OpenTSDB无法存储任何数据，它只是一层数据读写的服务，更准确的说它只是建立在Hbase上的一层数据读写的服务。

HBase在使用上的一个难点就是如何根据业务的特点，设计键值和索引。OpenTSDB就是这方面的一个实践。

参考：

https://mp.weixin.qq.com/s/GApmeXGbjRTnhullArlkYg

小米正用时序数据库，解决这个“硬核”问题

## 参考

https://mp.weixin.qq.com/s/ucQgmb1NkdyfAw6wDTyWYg

阿里HBase又放出了哪些大招？

https://mp.weixin.qq.com/s/BICJgyv2Y8r0j5Jjw6weRw

大数据查询——HBase读写设计与实践

https://blog.csdn.net/odailidong/article/details/41794403

Hbase万亿级存储性能优化总结

https://mp.weixin.qq.com/s/kJbeuu3zqRxQxVN38Z4asA

​你应该知道的HBase基础，都在这儿了

https://mp.weixin.qq.com/s/Bl1NT-pgSseImLEd9f6xzA

Apache HBase的现状和发展

https://mp.weixin.qq.com/s/xWNSI9jZVIYaGxdBsSB8gw

快手HBase在千亿级用户特征数据分析中的应用与实践

https://mp.weixin.qq.com/s/pQbsGxM59fgQMYH54ETk7Q

面试集锦-HBase

https://mp.weixin.qq.com/s/vyF0VAF8xjEWrBnS1_DtkA

用HBase做高性能键值查询？

# Docker

## 概述

Docker是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。

官网：

https://www.docker.com/

教程：

https://www.runoob.com/docker/docker-tutorial.html

下图显示了Docker和VM之间的差别：

![](/images/article/docker_vs_vm.png)

- 虚拟机携带操作系统，本身很小的应用程序却因为携带了操作系统而变得非常大，很笨重。Docker是不携带操作系统的，所以Docker的应用就非常的轻巧。

- 也因为Docker没有OS，因此Windows的Docker镜像是不能在Linux上跑的。arm的镜像也不能在X86上跑。但是不同的Linux发行版由于内核是兼容的，是可以运行的（除非应用依赖了一些发行版相关的东西）。

在线安装：

`sudo apt install docker docker.io`

离线安装：

https://download.docker.com/linux/static/stable/x86_64/

## 使用

1.镜像和容器的关系，类似于类和对象的关系，它们有各自不同的ID。

保存/加载镜像：`docker save/load`

保存/加载容器：`docker export/import`

启动镜像：`docker run`

启动容器：`docker start`

2.

列出镜像：`docker images`

操作镜像：`docker image`

3.容器和宿主机的文件交换

从容器往宿主机copy：

`docker cp 容器id:/path_in_container /path_on_host`

从宿主机往容器copy：

`docker cp /pathonhost 容器id:/pathincontainer`

参考：

https://www.cnblogs.com/dyh004/p/9122639.html

docker容器与宿主交互数据

## 参考

http://blog.csdn.net/colorant/article/details/20608157

快速理解Docker

http://www.cnblogs.com/zhangmingcheng/p/5730070.html

Docker数据管理

https://mp.weixin.qq.com/s/E4wKaIddq8_jRVx9q08qtg

Docker入门

https://mp.weixin.qq.com/s/ioRxU9UEr_OJHR5Z5XJ6Vg

Docker入门看这一篇就够了，万字详解！

https://mp.weixin.qq.com/s/S8OXlhRf90nobJtc3TgIpg

基于docker构建hadoop集群

https://mp.weixin.qq.com/s/VfC41XiVmpdWUy3VXgDLuw

Docker基本概念和安装

https://mp.weixin.qq.com/s/LeaYn-CUeu3wognse1fSzw

理解、使用Docker（上）

https://mp.weixin.qq.com/s/YPLnTF_jh8xahZ-uLffSkw

理解、使用Docker（下）

https://mp.weixin.qq.com/s/0jD_Ek2-AOsefjcdr9-A7g

Docker容器介绍

https://mp.weixin.qq.com/s/KBNFQA_4KG0LLadzRtvPPw

如何用两个小时入门Docker？

https://mp.weixin.qq.com/s/2w_63cwNOZ4pzOmarKIk-w

最全的30+个开源免费的Docker工具

https://mp.weixin.qq.com/s/iRCnShcbcL8cUMe0MT1mZQ

用Docker玩转PHP环境配置

https://mp.weixin.qq.com/s/XgCmAi1sgu1iA4cW-Zjcbw

Docker完全指南

https://mp.weixin.qq.com/s/e51KpBltxRd8Qk-VRj6EhQ

让Docker更强大的9个安全开源工具

https://mp.weixin.qq.com/s/DQESB4tB1G43JJQImKsvqg

docker系列学习（一）：整体认识

https://mp.weixin.qq.com/s/Ex1AOKGlp2ag6CQTc3rSkA

您想要的docker环境来了！

https://mp.weixin.qq.com/s/HFW3oiGIcYJdaKGjIahXjA

不要把大型JAR包放进Docker镜像

https://mp.weixin.qq.com/s/fY0bfMGL3UXT_3j4LZXaHw

推荐5款好用的开源Docker工具

https://zhuanlan.zhihu.com/p/90408275

下一代容器架构已出，Docker何去何处？看看这里的6问6答！！

https://www.zhihu.com/question/27322045

Docker容器里运行的程序是否与操作系统有关？

https://zhuanlan.zhihu.com/p/115845957

两个奇技淫巧，将Docker镜像体积减小99%

# Pulsar

https://mp.weixin.qq.com/s/O8pj4pChyw8PK-G_4A3DWg

发布订阅消息系统Apache Pulsar简介

https://mp.weixin.qq.com/s/ToJJTBWJXlpj3LkDj5YYvw

为什么要选择Apache Pulsar

https://mp.weixin.qq.com/s/B9zo0zThARAi11hRuJ-AqA

开源实时数据处理系统Pulsar：一套搞定Kafka+Flink+DB

https://mp.weixin.qq.com/s/v4A--nGiDTt58pZyIzepeg

比拼Kafka，大数据分析新秀Pulsar到底好在哪

https://mp.weixin.qq.com/s/x4GW5zvjD5Fyc-NrXDqpmA

Kafka不够好，智联招聘基于Pulsar打造企业级事件中心

https://mp.weixin.qq.com/s/sWrUlwEe4CBPQklzFWNE3A

选择Pulsar而不是Kafka的7大理由

https://mp.weixin.qq.com/s/L84Ll2PlJLHhQYo134bcFQ

如何基于Apache Pulsar和Spark进行批流一体的弹性数据处理？

https://mp.weixin.qq.com/s/zqvKzJkP5LtDriuRXojn7Q

我们为什么从Kafka迁移至Pulsar？
