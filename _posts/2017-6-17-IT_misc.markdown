---
layout: post
title:  IT杂谈
category: resource 
---

* toc
{:toc}

# IT杂谈

## Bill Gates和MS-DOS

众所周知，MS-DOS的最初版本，是西雅图电脑公司的Tim Paterson写的。但这是否和Bill Gates一点关系都没有呢？

其实不然。Tim Paterson写86-DOS只花了6个星期，就算他是个大牛，也断没有这么快的道理。这只能说明他在做这个东西的时候，手里已经有了相当多的素材，使得他只需要做少量的工作即可。

素材是什么呢？Wiki上给出了答案：CP/M和FAT。

前者是Digital Research公司的产品，也就是那个由于价钱高，而被IBM在选择PC OS时放弃的公司。CP/M 8-bit是70年代中期最流行的OS。但到了1978年以后，随着技术的扩散和相关书籍的出现，这在当时的技术圈里已经是大路货了。

后者和Bill Gates可就大有关系了。Wiki上告诉我们，Bill Gates是FAT的两个发明人之一。

从以上的信息可以分析出，Tim Paterson虽然不在MS，但是和Bill Gates的关系可不是一般的密切。事实上Tim Paterson在编写86-DOS之前的工作，就是帮MS的软件设计硬件卡。（当时的PC，处理能力有限，很多软件都被设计成了硬件卡的形式。老的PC用户应该对286时代的汉字卡和386时代的音视频解压卡还有些印象吧。史玉柱就是靠卖汉卡起家的。）所以这也成为Bill Gates能够知道86-DOS存在，也敢于花大价钱买的重要原因。此外，两人的岁数相当，Bill Gates只比Tim Paterson大两岁，基本上就是同一个战壕的兄弟。我想这也是Tim Paterson三进三出MS的重要原因。

顺便提一句，2.5W美元的价格其实是个公道价，微软只买走了使用权，没买走版权，这也为之后西雅图电脑公司和MS之间的官司埋下了伏笔。相比之下，两年前Steve Jobs只花了1.3W美元就搞定了OS。

归根到底，西雅图电脑公司只是个硬件公司，它并不重视软件的价值。所以虽然它的软件技术比MS这样的软件公司还强，但是却不懂得如何利用软件。因此没有把握好时代的脉搏，让MS占了便宜，也就不足为奇了。

----

2019.7

最近MS在github上开源了MS-DOS的早期版本（v1.25 & v2.0）：

https://github.com/microsoft/MS-DOS

从代码来看，确实也就是几个星期的工作量

----

https://mp.weixin.qq.com/s/ncdgNEXnUrQimOzoZzVrjA

操作系统三十年的兴衰史

## CP/M和BeOS

这两个东西的共同点，相信熟悉那段历史的人都能看的出来。没错，这就是：

1.两者都是技术上的先行者和领先者，而且直到最后失败，也不是由于技术被反超导致的。

2.两者都有很好的机会，能够改写历史。

3.两者都是由于要价过高，而被机会所放弃。

4.他们的对手尽管有种种不足，但是最终改写了历史。他们是MS-DOS和Mac OS X。

## Robert Love

这几天研究Android源代码，发现了一个牛人——Robert Love。最初注意他是因为他的姓氏挺有意思的。没想到过了几十分钟，就在另一个嵌入式操作系统方面的课件中看到了他的名字。他是Preempt Linux的作者，也是Linux Kernel Development一书的作者，同时还是Android的日志系统的作者。

最关键的是，他是1981年出生的人，比我也就大一点儿。而Preempt Linux是他2001年的作品。那个时候我貌似连C语言都没怎么弄利索。。。

至于国内的牛人，有个叫李云的诺西工程师，写了本嵌入式方面的书感觉还不错，不是随便复制粘贴的东西，可以看看。不过一者，李云比我大好几岁，二者他水平虽然比我高，但还没到仰视的地步。所以终究比不了那些老外的牛人啊。。。

还有一个关于他的笑话：Robert Love是佛罗里达大学的毕业生，这所大学在名校众多的美国，只是个不入流的二本院校。于是有人调侃到：千万别去佛罗里达大学上学，因为Robert Love是从那里毕业的，而Robert Love是研究Linux Kernel的，Linux Kernel是无趣的，所以佛罗里达大学也是无趣的。

这个笑话见诸他的个人主页，但不知道是否真有此事。如果有的话，他的影响力可见一般。就像刘路之于中南大学一样。

## 新的开始

PS：这是一篇自己写于2011.11的文章，转眼间已经3年半过去了。

又是一年多没更新了。告别了北京，告别了第二家公司，开始了第三段程序员生涯。一直以来对移动互联网很有兴趣。第一家公司同一批的同事之中，绝大多数进了互联网行业，部分就在移动互联网行业。我则阴差阳错的进入了芯片设计行业，虽然设计的还是软件，而非芯片本身。

一直想借着这次换工作的机会，去一个移动互联网公司，但是很少有公司对我第一家公司的经验感兴趣。从现实角度，我也不可能接受新人的薪水，重新开始。所以也就随遇而安了。

当然，到了我这个阶段，公司层面也并非什么障碍。爱因斯坦的相对论是当职员的时候提出的。钱德拉塞卡的钱德拉塞卡极限是在从印度到剑桥大学的船上推导出来的。有之前的相关经验，自己私下里研究一些移动互联网的相关技术，不过是轻车熟路而已。

最近这半年，软件层面的长进，比较有限。主要是新学习了SPARC体系结构和浮点运算协处理器的东西，以及对链接器的功能有了更深入的理解。其他的也就没啥了，倒是数学知识长进了不少。

既然没有野心去自己创业，那么继续加强自己的技术水平，“将以有为也”，也是不错的选择。

首先是数论的研究。印度人在这方面很有天份。拉马努扬发现了分划数的公式，实在很难想像一个有着40多个符号的公式是人能想出来的。

还有玻色，他所发现的玻色-爱因斯坦凝聚，虽然没有为他本人带来诺贝尔奖，但是却给后来者带来了3个诺贝尔奖。

最后就是钱德拉塞卡，天体演化学的奠基人，其诺贝尔奖获奖成果是在19岁，还没有上大学之前作出的，尽管他直到晚年才获得了诺贝尔奖。美国的钱德拉X射线太空望远镜，就是为了纪念他而命名的。

其次是信号与系统，大二时本来是学过的。可惜荒了快十年，基本都还给老师了，好在目前工程上只需要使用结论就可以了，不像学校里偏重于推导。所以，研究的广度，竟然比学校广了不少。主要就是各类FFT算法，还有载波的各种调制方式。

还有矩阵论，工作上主要是用它来求解多元线性方程组。如果不是线性方程组的话，还要使用Jacobi矩阵将之线性化，然后矩阵求逆，计算出最终结果。当然还有Kalman滤波的使用，考虑到Kalman滤波和Google的PageRank算法都是基于随机过程的，所以Kalman滤波的应用范围应该还是很广的。

可惜对随机过程完全不了解，打算最近研究研究。

## Mechanical Turk

Mechanical Turk，是中世纪的一件震动欧洲的发明。一位发明家号称发明了一种具有人类智能的机器人，能够跟人下国际象棋，并且真的带着这个机器人横扫欧洲的各位象棋大师。不过不用当心，常识告诉我们这不可能，否则深蓝也不用加以宣传了。一位不信邪的人下令拆掉这台机器，结果发现里头真的藏着一个土耳其象棋大师。于是这台机器（或者说这位土耳其人–Turk)就被称为Mechanical Turk。

![](/images/article/Mechanical_Turk.jpg)

参见：

http://www.uh.edu/engines/epi2765.htm

**人工智能，就是有多少人工，就有多少智能。**

为了提升AI的智力，Amazon想了个点子：

https://www.mturk.com

简单来说，该网站就是在互联网上招募人工，用以生成标注数据。

国内的同类网站有：

http://zhongbao.alibaba.com/

http://zhongbao.baidu.com/

## Google和百度的技术差距

2016.4

首先是一篇2010年的文章：

http://www.cnblogs.com/realviv/articles/1915382.html

当然知乎上也有相关的主题：

https://www.zhihu.com/question/22447908

时至今日，如果我们对于这个问题的争议，还停留在当年Robin提出了和Page Rank算法类似的算法的层面的话，那就太out了。迟至2010年，Page Rank算法已经不算Google的核心技术了。

现在最多只能说，百度曾经和Google在某一个领域在一个差不多起跑线上。即便这一点，仍得益于Robin接受了美国的教育和熏陶。

所以这个问题，似乎应该改为Google和BAT的技术差距有多大。

PS：这里吐槽一下IT技术进步的速度，以基于文本的搜索为例。

如果你在2000年的时候，掌握这门手艺，那么你就可以开宗立派，比如Robin。

如果你在2008年的时候，掌握这门手艺，至少也可以到Robin手下获得一份不错的薪水。

如果你在2016年的时候，掌握这门手艺，那么你离失业已经不远了。因为，几乎不会有老板，会为了一个15年前的老技术而投资招人。

# 新潮电子

https://best.pconline.com.cn/yuanchuang/1480778.html

即是电视也是音箱——Divoom Tivoo像素蓝牙音箱

# 项目管理

https://mp.weixin.qq.com/s/EmiSKzLaw6nN9TnG6lrFug

把“烦恼”放进看板，开源免费的项目管理工具来帮你啦！

# Pytorch+++

https://mp.weixin.qq.com/s/RBclQdtaA8prvSoUUdhrEQ

机器学习的Pytorch实现资源集合

https://mp.weixin.qq.com/s/zPv-3fMy1rZwAwPqjs7oAA

Pytorch图像分类从模型自定义到测试

https://zhuanlan.zhihu.com/p/46636027

1张图学会PyTorch+TensorFlow+MXNet+TF Eager

https://mp.weixin.qq.com/s/yS9PAw926Y7AsGRW0eHG0Q

基于PyTorch的GAN框架TorchGAN：用架构级API轻松定制GAN项目

https://github.com/CVBox/PyTorchCV

一个基于pytorch的CV框架

https://mp.weixin.qq.com/s/w09hcJof80m2VGwn7SgKmQ

TorchSeg—基于PyTorch的快速模块化语义分割开源库

https://mp.weixin.qq.com/s/TsR-jgO2c2-dbqnk1mEj8w

想读读PyTorch底层代码？这份内核机制简介送给你

https://mp.weixin.qq.com/s/Lzt3LbO6lBbOebNV1d2pLQ

迁移学习不好懂？这里有一个PyTorch项目帮你理解

https://mp.weixin.qq.com/s/7fK6GNyzYTP0fQy7F01fZw

PyTorch深度学习模型训练加速指南2021

https://mp.weixin.qq.com/s/SReuVBN8WIXFlnwho3wqgQ

最详细的Pytorch底层算子扩展总结

https://zhuanlan.zhihu.com/p/360405558

PyTorch分布式训练

https://mp.weixin.qq.com/s/14_pt0_skKYNw2sAK5Zptw

Pytorch底层算子扩展最详细的总结

https://mp.weixin.qq.com/s/Svh27YIG2jYWqXwhhEuoSw

使用Pytorch和BERT进行多标签文本分类
