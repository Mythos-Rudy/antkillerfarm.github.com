---
layout: post
title: CPU(二)
category: resource 
---

* toc
{:toc}

# CPU

## 历史

https://mp.weixin.qq.com/s/-2kGkJzjay2WJzIpMs2Adw

IEEE盘点27款震撼世界的芯片

https://mp.weixin.qq.com/s/KhY-PPdvZ26Uy8xEgi70DA

纪念晶体管诞生71周年——改变世界30款芯片大阅兵！

http://m.uczzd.cn/webview/news?aid=15020380163392206798

你所不知道的经典科技发展史: 以前CPU是如何设计出来的

https://mp.weixin.qq.com/s/Lnolh9y0rf86wOGa-F1xmw

计算机的诞生史

https://mp.weixin.qq.com/s/f_rk-NPKNzYpbHOr5bgluw

一文了解半导体的过去、现在和未来

https://mp.weixin.qq.com/s/A6tc00Azj9AM-FApt5CkTQ

AMD YES！背后不为人知的故事

https://mp.weixin.qq.com/s/EfjhstpXsl6sG9q_-qQjXQ

世界半导体集成电路发展史

https://mp.weixin.qq.com/s/pSKQ3lRYV13qU_5DaOw2HQ

晶体管发展历程回顾

## AVX

MMX直接使用了80bit的FPU寄存器中的64bit，对CPU整个流水线几乎没有影响；SSE的128bit相比80bit增加了48bit宽度还算可以接受。AVX的256bit，整个CPU的数据通道比80bit增加了三倍多，需要消耗三倍的晶体管，功率也增加了三倍。因此在严格限定功耗的场景如笔记本或者服务器中，CPU运行AVX应用时需要降低频率从而降低功耗。

参考：

https://www.zhihu.com/question/406517759

如何看待Linus Torvalds对AVX512的评价？

## Cache

Cache本质上是一块小而快的存储设备和另一块大而慢的存储设备之间的协作关系。

Cache分为硬件Cache和软件Cache两种，这里只讨论前者。后者参见《数据库（一）》。

![](/images/img4/Mem_Gap.png)

上图展示了CPU和DRAM之间的速度增长的差异，这个差异通常被称为Memory Gap。1980年代以前的计算机是没有Cache的，但是随着Memory Gap的增大，Cache的级数也不断增多，目前3级片上Cache+1级片外Cache已经是标配了。

必须指出的是，和CPU的速度受限于技术进步不同，RAM的问题主要是性能和价格的折衷。Cache实际上也是一种RAM，最好的L0 Cache和CPU的速度相当，只是价格太高而已。

类似这样的还有PCB的线宽。微米级的线宽技术上完全可行，毕竟芯片都已经是纳米级的线宽了，主要还是价格的问题。

多核CPU多级缓存的一致性，一般由相关的一致性总线协议保证。这些协议包括：MSI、MESI和MOESI。

https://mp.weixin.qq.com/s/cSu-P-aDSXH0CYLN2HNrxw

深入理解Cache（上）

https://mp.weixin.qq.com/s/rml_wqePIx8vOk2ZO9_GMA

深入理解Cache（下）

https://mp.weixin.qq.com/s/Lydg1TMlNO_98Z-NF5BIBQ

理解CPU Cache

https://mp.weixin.qq.com/s/8g33nTI_-i9Rzmu-5Up-HA

高性能编程：三级缓存（LLC）访问优化

https://mp.weixin.qq.com/s/QidAD9OuVdEXFqxRMPx5lQ

响应速度不给力？解锁正确缓存姿势

https://mp.weixin.qq.com/s/570O2BloWjy3q0_m_mfiZg

CPU缓存一致性协议

https://mp.weixin.qq.com/s/ziJ8OFiLA1it3sQvycN7Mg

翻越缓存的三座大山

https://zhuanlan.zhihu.com/p/63494668

显存为什么不能当内存使？内存、Cache和Cache一致性

https://mp.weixin.qq.com/s/AekR-mv9EOD-4V5SKqI9YQ

一文看懂缓存

https://mp.weixin.qq.com/s/FY8sEX4acEUpCu_6ntArYw

CPU缓存L1/L2/L3工作原理

https://blog.csdn.net/ZoeyyeoZ/article/details/51804647

MESI&MOESI协议

https://mp.weixin.qq.com/s/G4SpTC8DZ-l5kWBRGwSwGQ

Linux内存、Swap、Cache、Buffer详细解析

## Bélády's Algorithm

Bélády认为最好的缓存算法是：丢弃那些在将来最长时间不被使用的数据。显然这是一个理想化的算法，因为我们没有办法预测未来。但它可以作为衡量缓存算法优越度的一个理论上限。

>László Bélády，1928年生，匈牙利计算机科学家。Technical University of Budapest本硕。IBM研究员。

LFU: least frequently used

LRU: least recently used

https://mp.weixin.qq.com/s/AdmEd1FHxpZUwSGYy3qggg

利用cpu缓存实现高性能程序

## Jim Keller

<table style="text-align:center" width="85%">
  <tbody>
    <tr>
      <td colspan="5">Jim Keller: Work Experience</td>
    </tr>
    <tr>
      <td colspan="2" rowspan="1"></td>
      <td>Company</td>
      <td>Title</td>
      <td>Important<br />
      Product</td>
    </tr>
    <tr>
      <td><strong>1980s</strong></td>
      <td><strong>1998</strong></td>
      <td>DEC</td>
      <td>Architect</td>
      <td>Alpha</td>
    </tr>
    <tr>
      <td><strong>1998</strong></td>
      <td><strong>1999</strong></td>
      <td>AMD</td>
      <td>Lead Architect</td>
      <td>K7, K8v1<br />
      HyperTransport</td>
    </tr>
    <tr>
      <td><strong>1999</strong></td>
      <td><strong>2000</strong></td>
      <td>SiByte</td>
      <td>Chief Architect</td>
      <td>MIPS Networking</td>
    </tr>
    <tr>
      <td><strong>2000</strong></td>
      <td><strong>2004</strong></td>
      <td>Broadcom</td>
      <td>Chief Architect</td>
      <td>MIPS Networking</td>
    </tr>
    <tr>
      <td><strong>2004</strong></td>
      <td><strong>2008</strong></td>
      <td>P.A. Semi</td>
      <td>VP Engineering</td>
      <td>Low Power Mobile</td>
    </tr>
    <tr>
      <td><strong>2008</strong></td>
      <td><strong>2012</strong></td>
      <td>Apple</td>
      <td>VP Engineering</td>
      <td>A4 / A5 Mobile</td>
    </tr>
    <tr>
      <td><strong>8/2012</strong></td>
      <td><strong>9/2015</strong></td>
      <td>AMD</td>
      <td>Corp VP and<br />
      Chief Cores Architect</td>
      <td>Skybridge / K12<br />
      (+ Zen)</td>
    </tr>
    <tr>
      <td><strong>1/2016</strong></td>
      <td><strong>4/2018</strong></td>
      <td>Tesla</td>
      <td>VP Autopilot<br />
      Hardware Engineering</td>
      <td>Fully Self-Driving<br />
      (FSD) Chip</td>
    </tr>
    <tr>
      <td><strong>4/2018</strong></td>
      <td><strong>6/2020</strong></td>
      <td>Intel</td>
      <td>Senior VP<br />
      Silicon Engineering</td>
      <td>?</td>
    </tr>
    <tr>
      <td colspan="2" rowspan="1"><strong>2021</strong></td>
      <td>Tenstorrent</td>
      <td>President and CTO</td>
      <td>TBD</td>
    </tr>
  </tbody>
</table>

## Other

https://zhuanlan.zhihu.com/p/34003929

调试程序时，设置断点的原理是什么？

>Visual Studio有个有趣的特性是debug编译后，会把0xcc（INT 3）填入代码的空隙，这样一旦程序越界就会被VS捕捉而容易发现错误。而0xCCCC在中国的GBK编码是“烫”。有中国程序员翻看内存到代码段会发现很多"烫烫烫"，不明所以，以为发生了什么神奇的事情。

---

https://mp.weixin.qq.com/s/Cij_95iLbAm0AEtrSb72_A

关于CPU科普，这篇说得最详细

https://zhuanlan.zhihu.com/p/29743431

CPU制造的那些事之一：i7和i5其实是孪生兄弟！？

https://zhuanlan.zhihu.com/p/29767262

CPU制造的那些事之二：Die的大小和良品率

https://zhuanlan.zhihu.com/p/31848803

为什么CPU越来越多地采用硅脂而不是焊锡散热？

https://zhuanlan.zhihu.com/p/27624654

CPU风扇停转后会发生什么？CPU凭什么烧不坏

https://zhuanlan.zhihu.com/p/30409360

为什么CPU的频率止步于4G?我们触到频率天花板了吗？

https://zhuanlan.zhihu.com/p/33145828

什么是Speculative Execution？为什么要有它？

http://mp.weixin.qq.com/s/sshhUppVPP6qM7LH1V3nSQ

四位计算机的原理及其实现

https://zhuanlan.zhihu.com/p/33579054

Reset重启后发生了什么？它和关机后再开机有什么区别？

https://zhuanlan.zhihu.com/p/34091597

ARM攒机指南-网络篇

https://zhuanlan.zhihu.com/p/34223088

如何进入BIOS？

https://zhuanlan.zhihu.com/p/30565679

人工智能技术热潮中，是否存在破解苹果A11处理器的可能？

https://mp.weixin.qq.com/s/UWpp2r0_yDxNyJk-cldVyA

处理器高危漏洞无人幸免？树莓派：我们不受影响

>最近的Meltdown和Spectre漏洞被炒的沸沸扬扬，然而能用python语言讲述复杂的CPU计算原理，这是该文的一大创见。

https://mp.weixin.qq.com/s/v_BsfSFp-LwiCOFKaMIS_g

后摩尔时代，如何给你的CPU减负？

https://mp.weixin.qq.com/s/gpfMOW7gzVa2HhYOlDy2nQ

从Intel和ARM争霸战，看看做芯片有多难

https://zhuanlan.zhihu.com/p/43626576

关于芯片，这篇说得最详细！

https://zhuanlan.zhihu.com/p/43768401

如何像搭积木一样构建CPU？Intel和AMD都是怎么做的？

https://zhuanlan.zhihu.com/p/48593932

CPU底部的小块是干什么用的？为什么CPU这么多电源引脚？

https://zhuanlan.zhihu.com/p/51145563

TDP是CPU的功耗吗？TDP是固定不变的吗？

https://mp.weixin.qq.com/s/gzE46SzANLaYaXdLVEBRaA

专家揭秘“低功耗芯片设计”真相

https://mp.weixin.qq.com/s/pFBhnjtXi8uNMGjYFeSfow

芯片行业都难在哪儿？这篇说得最详细！

https://mp.weixin.qq.com/s/nDWJS4rfWsqeVgJQbAYQ6w

一文看懂IGBT(绝缘栅双极型晶体管）

https://mp.weixin.qq.com/s/4_eGNtXULAdK9UzsP1mwKA

IGBT的现状与发展

https://mp.weixin.qq.com/s/TG6C4P-DvhRTJ2FoU8PFtw

IGBT基础与运用知识

https://zhuanlan.zhihu.com/p/56864499

CPU是怎么调节输入电压的？为什么要这么做？

https://mp.weixin.qq.com/s/LreWWlXAQL-dqQBCk93soQ

解读两大精简指令集：RISC-V和MIPS

https://mp.weixin.qq.com/s/JLg6sEwCxTMpo2nyCt50qg

指令集——CPU芯片江湖中的门派标志

https://mp.weixin.qq.com/s/7gXK6Qv9gLMkYtXw9oz9Sg

一文看懂指令集是什么

https://mp.weixin.qq.com/s/p7FKgx-sFGDJF0y4IGWvyg

CPU指令集架构科普

https://mp.weixin.qq.com/s/5uie8Ci5dK_wy54Z70Gklg

RISC-V精简到何种程度？能省的都省了！

https://mp.weixin.qq.com/s/JNCC3C3Sq0Hzk_5VBcivng

RISC-V有何特别之处？

https://mp.weixin.qq.com/s/26se041cc9aBRw16kvPPjA

芯片制造新模式--像搭积木一样造芯片

https://mp.weixin.qq.com/s/QwE_VTEUS9kGDDrHlzPYmg

硅片为什么不是方的？

https://zhuanlan.zhihu.com/p/32378843

ARM攒机指南-汽车篇

https://mp.weixin.qq.com/s/Hq9hzkyfGcCQa_FfzSDoRg

5nm工艺节点以后，半导体器件的发展方向

https://zhuanlan.zhihu.com/p/66263349

为什么内存和闪存制程比CPU低？它们现在都在什么节点？

https://mp.weixin.qq.com/s/lz6EoLiLtPtWFMG1FJCuQw

化合物半导体的机遇

https://mp.weixin.qq.com/s/tTtySk3u6m2BGUkDto5Ojw

可重构芯片的方法学原理

https://mp.weixin.qq.com/s/RkRZX_scr__Q_mLPhaaWAA

AMD Zen 2处理器架构为何要如此设计？

https://mp.weixin.qq.com/s/dRv4xWV8laCYBaZ0DwOC3A

如何从零开始设计一颗芯片？
