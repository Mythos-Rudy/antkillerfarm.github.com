---
layout: post
title: Blog维护日志, 入行以来涉及的技术简史（二）
category: my story 
---

* toc
{:toc}

# Blog维护日志

2021.5.7 添加COVID19分类。

2021.4.26 文章数达到450篇。

2021.3 添加World分类。

2021.3.8 添加mermaid支持。可命名为v5.5。

2020.12 添加Bombs & satellite和My story分类。分类数达到23。

2020.9.26 文章数达到400篇，添加img4。

2020.8.17 将MathJax升级到3.0.5。

2020.8.7 添加TOC。可命名为v5.0。

2020.5.29 添加Graph分类。

2020.4.28 添加Segmentation分类。添了一个Technical University of Munich的follower。

2020.1.23 添加Nature分类。

2020.1.1 文章数达到350篇。添加Recommender system分类。

2019.11 添了一个National Taiwan University的follower。

2019.10.9 将RL分类拆分为RL和DRL两类。

2019.7 添加Attention、DL acceleration分类。

2019.6.19 文章数达到300篇。可命名为v4.5。

2019.4.26 img2的图片太多，特添加img3。

2019.3.27 NLP参考资源已经积攒了很多，特进行细分类，使之更有条理。

2019.3.19 添加GAN & VAE分类。

2018.11.19 添加RL分类。

2018.11.16 文章数达到250篇。一个分类达到50篇，可读性的问题就比较大了，修订也比较麻烦。特创建Deep object detection分类。由于文章较多，新分类的迁移将缓慢进行。可命名为v4.0。

2018.11.14 DL专栏文章达到50篇。

2018.8.1 在知名公众号上看到自己的文章。里程碑啊！

2018.7.26 近来blog相关的事情比较多。

1.CSDN编辑拉我进高级作者微信群。另一不知名小编居然和我约稿。。。太瞧得起我的水平了。。。

2.添了一个Google的follower，居然还是tensorflow的committer，就连做的工作都和我类似。。。

3.添了一个Azerbaijan的follower，有没有搞错啊！你确定你看得懂中文吗？

2018.7.19 添加Speech分类。

2018.2.22 文章数达到200篇。

2018.2.1 又添了几个清华、头条、商汤的follower。其中有个人，我俩几乎同时关注了对方，挺有缘分的。此外，居然还有人把我的blog给fork了。。。

2018.1.10 近来转战DL以后，blog的产量日增，也渐有重量级的follower：几个中科院、浙大的硕士。并收到了第一笔打赏。

2017.12.21 blog图片太多，特添加第2个图片文件夹。

2017.10.22 文章分为Language、Linux、Technology、Essay、Resource、Graphics、AI、ML、Math、DL十类。可命名为v3.5。

2017.10.18 文章数达到150篇。

2017.5.17 修改标题的css。可命名为v3.0。

2017.4.5 添加微信打赏二维码图片。

2017.3.22 评论系统切换到Github Issue。

2017.3.4 文章数达到100篇。

2016.11.3 文章分为Technology、Theory、Essay三类。

2016.8.1 添加blog数量的统计信息，将MathJax升级到2.6.1。

2016.5.12 为了广而告之，特将blog登录CSDN。但由于编辑方式的差异，Github仍为主站，内容较新较全。

2016.4.12 将MathJax等资源切换为国内的cdn。

2016.4.10 首页将技术文章和非技术文章分栏显示。

2016.3.30 白底黑字太晃眼，特切换为浅灰底色。

2016.3.18 评论系统切换到多说。

2016.2.22 文章数达到50篇。

2016.2.2 代码区的配色实在看起来费眼，屡次微调，仍不满意。这次借鉴原blog（也就是大徐抄袭的源头）的配色方案，最终达到基本满意的效果。可命名为v2.0。

2015.1.7 blog搬家基本完成。

2014.12.23 围观大徐的blog有感，特在github上安家落户，废弃了原来的搜狐blog。

# 入行以来涉及的技术简史（续）

### 3）QT

同上。

### 4）.NET

.NET使用了一套与MFC不同的GUI框架。从接口来看，其实更像是MS的死敌Borland的VCL的那套东西。现在使用这个编写PC工具似乎已经非常普遍了，而且随着应用的广泛，目前自带.NET Framework的PC也越来越多。很多时候，我们只用发布程序就好了。同事W算是这方面的高手，基本上这边的PC工具有八成都是他主导制作的。将公司在这方面的水准提升了一个台阶。

### 5）GTK

这是去年下半年开始自学的GUI框架。主要原因是目前已有部分工作转移到Linux下，总要有个称手的GUI框架才好。其次，目前的工具代码，大多是copy自产品代码的某一部分。产品使用gcc作为编译器，而gcc的语法和VC也不尽相同。产品代码中使用的比较多的局部动态数组，VC到目前仍不支持。

## 3.移动平台

工作以来，一直在嵌入式领域打拼，也经历了不少的移动平台，罗列如下：

### 1）Wince/Windows Mobile

这是接触的第一个移动平台，在学校的时候，我甚至连SD卡都没见过。应该说Windows Mobile是iOs和Android崛起之前，最高端大气的移动平台。由于API与Win32 API高度兼容，上手难度也不高，着实风光了一把。同期的竞争对手Symbian由于对触摸屏的支持不好，加之硬件规格较低，对于导航地图之类的当时的“超级应用”来说，还是有些力不从心的。

### 2）Nucleares/Brew/MTK/Symbian S60/Symbian UIQ/Moblin

这些平台没有做过大的项目，但是看过其中的应用代码。应该说这些都是iOS和Android出现之前，功能手机和嵌入式设备的主流系统。

### 3）Android

没有在该平台上开发过商业产品。但是作为从其诞生之初就一直在关注的人士。无论对它的应用层，还是对它的中间层和驱动层都有一定的了解。基本上从见到Android的第一眼开始，我就预见到Nokia和黑莓的衰败。即便黑莓在稍后的2009～2010年达到它的顶峰，也不曾让我改变观点。

### 4）RTKE

这是飞利浦开发的一个实时内核，我在S公司工作期间主要用于手机基带芯片的控制。当时公司投入很大精力，想在一颗处理器上集成基带处理和应用处理的功能，其软件核心是在RTKE的基础上，搭建一个Linux虚拟机以运行Android应用。这个项目的初衷是推出千元以下的手机。但是后来随着硬件性能的提升和价格的下降，千元以下的手机的确是做出来了，但实际上所用的处理器的个数不仅没有减少，反而越来越多。PS:RTKE的用途不仅于此，有同事说他之前在其他公司也用过RTKE，然后细谈才知道飞利浦的剃须刀上用的也是RTKE。

## 4.其他

研究生时代研究过CORBA技术，主要用于通信运营商的网管系统的应用。工作之后，很久都没有听说过这个名词。前段时间，在招聘网上，搜了一下，发现CORBA技术本身并未灭绝，但是用途居然还是局限在网管系统的应用上。而且由于体系的庞大低效，原先使用CORBA构筑的GNOME桌面等PC程序，也将IPC转为更高效（但不通用，也不支持联网）的DBUS技术了。

## 2018.8

https://coolshell.cn/articles/3008.html

Windows编程革命简史

这篇文章谈到的这些东西，我基本都经历过。ATL算是我曾经花费很长时间去学，但却最终没学会的东西。好在从事后的角度看，这东西也没多少公司用。可能安全领域用的比较多吧，比如网银插件。

当然，这些年也遇到了一些绕了一圈最终逃不过的技术。比如GPU里面的shader技术，当初做3D GIS用到过，现在做AI计算又遇到了。

## 2018.9

尽管我从未涉足游戏开发行业，但不可否认的是，游戏开发是我许多年前报考CS专业，并从事相关工作的初心。

2015年的时候，由于当时工作比较轻松，自己也进入了技术进步的瓶颈期。于是以玩票心态，操练了一下游戏开发，其实就是cocos2d-x和box2d，还为后者提供了中文手册，并被原作者接受为官方版本。

之后由于兴趣转移，加上自己也意识到错过了入行的最佳时间，遂搁置之。不料，3年之后，cocos2d-x已经败下阵来，江湖的主角换成了Unity和UE。。。

此间，还短暂接触了crossapp——一个在cocos2d-x上改造而成的跨平台UI库。不料，cocos2d-x的作者对这种用法很不赞成：

>因为app开发是：如果没事的话我就不刷新屏幕了。游戏引擎是：尽量每秒60帧刷新速度除非你叫我停下来。换句话说，app是事件驱动刷新的，游戏是自循环驱动刷新的。带来的结果就是耗电量、发热量等完全不同。

## 2019.1

我对于大数据平台一直很有兴趣，但由于工作内容更偏向于算法和DL，因此平台类的技术栈都只是略知一二的水平。

不得不说，平台类的技术栈更新换代十分迅速。2016年，还是Hadoop/Hbase的天下，Spark开始发力，OpenStack则已经走下坡路。到了2018年，主角换成了Docker、Kubernetes、Flink。

回顾2年前第一个舆情分析项目，自己对于NLP、DL一无所知，对于ML也只有肤浅的认识。仅仅凭借同事的一句提示——Solr，开始闷头开荒，一路下来竟也让我闯出了一番新天地。

那个时代的我对于分词用的HMM，也曾顶礼膜拜。如今想来，恍如隔世。

# 模型压缩与加速进阶++

https://mp.weixin.qq.com/s/GJ7JMtWiKBku7dVJWOfLOA

CNN能同时兼顾速度与准确度吗？CMU提出AdaScale

https://mp.weixin.qq.com/s/pmel2k2J159zQi87ib3q8A

如何让CNN高效地在移动端运行

https://mp.weixin.qq.com/s/m-wQRm3VpfQkEOoUAxEdoA

论文解读: Quantized Convolutional Neural Networks for Mobile Devices

https://mp.weixin.qq.com/s/w7O2JxDH2ECqPn50sLfxpg

不用重新训练，直接将现有模型转换为MobileNet

https://mp.weixin.qq.com/s/EW6jvf98ifBucVz74SfSIA

文档扫描：深度神经网络在移动端的实践

https://mp.weixin.qq.com/s/3oL0Bso3mwbsfaG8X5-xoA

英特尔提出新型压缩技术DeepThin，适合移动端设备深度神经网络

https://mp.weixin.qq.com/s/LGCGYSoMpPfojEi2WcmjnQ

TinyML：下一轮人工智能革命

https://mp.weixin.qq.com/s/B-OJ_oW_uJufqIfIZSA7Ww

专家从7个维度全面评测轻量级网络

https://mp.weixin.qq.com/s/UDUOIIyGJtXHdc3xcyfOIg

万字综述：用于深度神经网络加速的Shift操作

https://zhuanlan.zhihu.com/p/301162618

深度学习模型压缩与加速

https://mp.weixin.qq.com/s/Lv1JuwNohAsIAB1SKT7Lkg

深度卷积网络的剪枝和加速

https://mp.weixin.qq.com/s/VEnX3YKQ02mRg2qbqMbXcg

轻量级网络综述—主干网络篇

https://mp.weixin.qq.com/s/s9Bp3s-Ep3QPDpo1mmwgWw

模型压缩系列一：模型替换

https://mp.weixin.qq.com/s/CNaQbeLbN4J3CsUIMaezFw

模型压缩系列二：模型蒸馏

https://mp.weixin.qq.com/s/WVwB-ldc8Yoin6I_m6RT5g

CNN轻量化模型及其设计原则综述
