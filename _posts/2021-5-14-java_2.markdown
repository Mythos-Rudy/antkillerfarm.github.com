---
layout: post
title:  Java（二）, 汇编
category: language 
---

* toc
{:toc}

# Java

## JVM（续）

https://mp.weixin.qq.com/s/MxMcpJlqSEZRO0CssQglOg

Android兼容Java 8语法特性的原理分析

https://mp.weixin.qq.com/s/ZlNcvwJ_swspifWTLHA92Q

Java动态调试技术原理及实践

https://mp.weixin.qq.com/s/23-S5tXTqi2LSe84OoQvvA

跑得好好的Java进程，怎么突然就瘫痪了？

https://mp.weixin.qq.com/s/h2_eAtoE9IWdi_OERul0Mw

Tencent JDK国产化CPU架构支持分享

https://mp.weixin.qq.com/s/iklfWLmSD4XMAKmFcffp9g

底层原理：垃圾回收算法是如何设计的？

https://mp.weixin.qq.com/s/sXv9XIIVDsflXr0FdrGM1A

垃圾回收器是如何演进的？

https://mp.weixin.qq.com/s/ag5u2EPObx7bZr7hkcrOTg

新一代垃圾回收器ZGC的探索与实践

https://mp.weixin.qq.com/s/0BEqgGEuC5cfqeDWx728Ig

8张图带你理解Java内存区域

https://mp.weixin.qq.com/s/C-hLyeshiENJ_wmUltOpbw

JVM完整深入解析

https://mp.weixin.qq.com/s/IlatTB-2AxxIph1z1RP9iQ

Java虚拟机垃圾收集机制详解

https://mp.weixin.qq.com/s/TBUQrqxMbWIjG65H4tAP1Q

十个JVM核心知识点

https://mp.weixin.qq.com/s/tHDB4tKmaY9vglmoRL9-tg

5款强大的JVM性能调优监控工具

https://mp.weixin.qq.com/s/2yxexZUr5MWdMZ02GCSwdA

谈谈JVM内部锁升级过程

## 参考

http://blog.csdn.net/u014717036/article/details/52234679

Java语言中的协变和逆变

https://mp.weixin.qq.com/s/h3MB8p0sEA7VnrMXFq9NBA

Java魔法类：Unsafe应用解析

https://mp.weixin.qq.com/s/_hSaI5yMvPTWxvFgl-UItA

Java动态追踪技术探究

https://www.cnblogs.com/paddix/p/5374810.html

Java并发编程：核心理论

https://www.jianshu.com/p/25b328753017

压缩20M文件从30秒到1秒的优化过程

https://mp.weixin.qq.com/s/mdYZhkWkAILQz_JnVA5xvA

深入AQS(AbstractQueuedSynchronizer)

https://mp.weixin.qq.com/s/_MVTvyG3gcsJcpidtQEBqg

为什么Java中“1000==1000”为false，而”100==100“为true？

https://mp.weixin.qq.com/s/X0foqlams1wMMnRE017XmQ

JDK 5-15都有哪些经典新特性

https://mp.weixin.qq.com/s/6HKCnN2HDi84bwjElhZBcQ

打工人，从JMM透析volatile与synchronized原理

https://mp.weixin.qq.com/s/GaK4iyTNvDsO9nMCXxrWkQ

看完这篇Exception和Error，和面试官扯皮就没问题了

https://mp.weixin.qq.com/s/01fj7l3xsxHVstlkrJ0epw

Java如何实现动态脚本？

https://mp.weixin.qq.com/s/Uw7YaphnlMQGGazIBYplgQ

我调研了100来个Java开源博客系统，发现这5个最好用！

https://mp.weixin.qq.com/s/tMUUwT0g3bzxyRgq5GeMWg

从0到1!大话动静态代理

https://mp.weixin.qq.com/s/_sLQiyNm92n2LA5YMNTocQ

Java字符串String那些事

https://mp.weixin.qq.com/s/8Cpl8PoAP1TI4y_cWYsA5A

排名前16的Java工具类

https://blog.csdn.net/mu_wind/article/details/109516995

Java8 Stream：2万字20个实例，玩转集合的筛选、归约、分组、聚合

https://mp.weixin.qq.com/s/oK6A3viNP3XafEvl7rzjKA

如何实现Java类隔离加载？

https://mp.weixin.qq.com/s/_3FVfZQuDftFpOf7cbuKgw

Java泛型T，E，K，V，?，傻傻分不清？

https://mp.weixin.qq.com/s/wij1mbRGzgahaCW7Vu5rgQ

Java反射到底慢在哪？

https://mp.weixin.qq.com/s/DiphH8bvR8TtLyQmnTkpuw

几种Java常用序列化框架的选型与对比

https://mp.weixin.qq.com/s/oyxO-x0t5bVHB7TNVYxxNQ

35个Java代码优化魔鬼细节

https://mp.weixin.qq.com/s/ZSUMCKZVEvJUx7JRaBTVIQ

一款Java开源的即时通讯IM聊天系统

https://mp.weixin.qq.com/s/zbakWF2UeTbrnfzmh-E7rg

一个ThreadLocal和面试官大战30个回合

https://mp.weixin.qq.com/s/KgJFyEmZApF7l5UUJeWf8Q

从操作系统层面分析Java IO演进之路

https://mp.weixin.qq.com/s/aEkJ1HkhfzIhGv0EwFoy1A

浅谈RSocket与响应式编程

# Javascript参考资源+

https://mp.weixin.qq.com/s/IIWgNvqp0jxcD-J_CikV8w

代码变油画，精细到毛发，这个前端小姐姐只用HTML+CSS，让美术设计也惊叹

https://www.cnblogs.com/zzd0916/p/11977995.html

浏览器工作原理与实践

https://mp.weixin.qq.com/s/MwWC0doO_sp_eRkInbE0hw

今天网站都变成灰色了，这其中是怎么实现的？

https://mp.weixin.qq.com/s/VTULhAjEUNfAph-xkkUTsg

手写一个解析器

https://mp.weixin.qq.com/s/3sYrI9kxgAYLiNT-xavRLw

“秒开”浏览器实现起来有多难？

https://mp.weixin.qq.com/s/LciDtj6YmPI7WxcCQM-lIA

前端性能分析工具利器

https://mp.weixin.qq.com/s/c4saBdDZDehokU5gJ-9fPw

JavaScript与ES的25个重要知识点

https://mp.weixin.qq.com/s/HUknNfaxNULc4Yvf5ajRBA

五分钟了解互联网Web技术发展史

https://mp.weixin.qq.com/s/4YXoSrYueQFWOC8sZH8LvQ

跨平台Web Canvas渲染引擎架构的设计与思考

https://zhuanlan.zhihu.com/p/373271928

浏览器性能优化实战

https://mp.weixin.qq.com/s/OlnIqu5JvO2WjIA5re9KIg

JavaScript引擎深入剖析(一)：JSValue的内部实现

https://mp.weixin.qq.com/s/sqW3HlCTV5Yivwi_B1Rzww

这个文件下载问题难住了我至少三位同事

https://mp.weixin.qq.com/s/SdtEmzTwdrW_g14QBEgcrQ

JavaScript中哪一种循环最快呢？

https://mp.weixin.qq.com/s/7CD_F0hEZtYRK0fvBWb_gQ

从0到1实现浏览器端沙盒运行环境

https://hllvm-group.iteye.com/group/topic/37596

各JavaScript引擎的简介，及相关资料/博客收集帖

https://mp.weixin.qq.com/s/rDAAfeQmUhxaHkrt_zVCCg

如何避免JS内存泄漏？

# python++

https://mp.weixin.qq.com/s/MzORtWN-mSmY9N5Ps5m5Mw

Python+Dash快速web应用开发：回调交互篇（上）

https://mp.weixin.qq.com/s/_o5upbRqjADpCkZ0q0ZwkA

Python+Dash快速web应用开发：回调交互篇（中）

https://mp.weixin.qq.com/s/81HauaX6fWstbUfgp3pJvw

Python+Dash快速web应用开发：回调交互篇（下）

https://mp.weixin.qq.com/s/RlJ5Y6xJ-8NfDW7oSZlYbw

深入Python解释器源码，我终于搞明白了字符串驻留的原理！

https://mp.weixin.qq.com/s/LeTNcQCT4mYu6HSlGoHbzQ

手机最强Python编程神器，在手机上运行Python不再是梦！

https://mp.weixin.qq.com/s/5xs1ivkrUAP_Rr9P-EMc5g

代码优化指南：人生苦短，我用Python。这篇blog主要介绍了如何追踪Python脚本的CPU使用情况。

https://mp.weixin.qq.com/s/HGH2e_0ocHv2VWsjOje9BQ

程序员必知的Python陷阱与缺陷列表

http://blog.csdn.net/linda1000/article/details/8315892

单引号、双引号和三双引号的区别

https://mp.weixin.qq.com/s/RP2j-PQMsAIXOK5u4zt3ZA

Python加速运行技巧

https://mp.weixin.qq.com/s/7sQ6p0IDWvttbvv_c71Etg

Python单元测试详解

https://mp.weixin.qq.com/s/TMcj-X5SmOqOgh6Ljkb3sw

模型热更新小记

https://mp.weixin.qq.com/s/czqO4Lo1Jt9zqg2UKNlLYg

手把手教你用Python创建微信聊天机器人

https://mp.weixin.qq.com/s/nT4GLtDtJ1MUg8TBHBDf_A

足不出户也能放风筝？OpenGL一招搞定！

https://mp.weixin.qq.com/s/7KdH2Zx3ugK6DXn5SYewAw

盘点Python加密解密模块hashlib的7种加密算法

https://mp.weixin.qq.com/s/EWnXlinxEJgzdRGJH4bFTQ

只需一行代码，就能导入所有的Python库？

https://mp.weixin.qq.com/s/egThaVvcgV_-opocwxWOVA

让Python代码简洁的实用技巧

# C/C++参考资源+

## spaceship operator

spaceship operator: `<=>`

C++20引入了spaceship operator：

- 如果`a<b`，返回std::strong_ordering::less。
- 如果`a>b`，返回std::strong_ordering::greater。
- 如果a与b全等/相等，返回std::strong_ordering::equal。

这和`strcmp`的设计理念类似。

此外，还有关系运算符的重载推导，定义了`<=>`之后，其他诸如`==`、`!=`、`<`、`<=`、`>`、`>=`的关系运算自动成立，无需再写相应的重载函数了。同理，如果定义了`==`，那么`!=`就自动成立了。

参考：

https://cloud.tencent.com/developer/article/1352324

C++20草案中的宇宙飞船运算符(<=>,spaceship operator)

## 线程安全注解

线程安全注解是现代C++开发的机制，可以在代码编译阶段检查锁的使用情况，从而发现线程同步的相关问题。该功能目前只有clang编译器支持。

https://blog.csdn.net/qq_32648921/article/details/109114887

线程安全注解

## Implementation-defined、Unspecified、Undefined

Implementation-defined：C标准没有明确规定，但是要求编译器必须对此做出明确规定，并写在编译器的文档中。

Unspecified：C标准没有明确规定，编译器可以自己决定，不必写在编译器的文档中。

Undefined：C标准没规定怎么处理，编译器很可能也没规定。

https://www.cnblogs.com/MagicLetters/archive/2011/08/03/2126471.html

C语言中关于Implementation-defined、Unspecified和Undefined

## 参考

https://zhuanlan.zhihu.com/p/23016264

这么多款STL，总有一款适合你

https://mp.weixin.qq.com/s/Hpn7KqYlBKz0JdryiozqyQ

每个开发者都应该了解的一些C++特性

https://www.cnblogs.com/wuchanming/p/3913492.html

emplace_back与push_back的区别

https://zhuanlan.zhihu.com/p/82895086

当我们谈论C++时，我们在谈论什么？

https://mp.weixin.qq.com/s/pxyTlQn4wx-N_MaWZc0oAQ

漫谈C++的各种检查

https://mp.weixin.qq.com/s/LchYGGcSbIMVGxO0Uea0RA

深入C++回调

https://blog.csdn.net/hahahacff/article/details/39504699

Java中创建对象的时候代码执行顺序(这个问题C++应该也存在)

https://blog.csdn.net/msq19895070/article/details/7910969

嵌入式程序员应知道的几个基本问题

http://dev.yesky.com/393/3007393.shtml

深入理解C++中的mutable关键字

http://blog.csdn.net/apunix/archive/2008/01/14/2043945.aspx

UNREFERENCED_PARAMETER的作用

https://mp.weixin.qq.com/s/1ELGzBkIdO1xa6LZV80raQ

C++中Future和Promise的一种简单实现

https://www.zhihu.com/question/24301047

如何理解C++11的六种memory order？

https://mp.weixin.qq.com/s/en9T7WfQDvFan9tu1q8oRA

c++11与内存模型

https://mp.weixin.qq.com/s/2Lq93xPffOVZB8WvbkhCDg

函数调用的三种约定，你都清楚吗

https://mp.weixin.qq.com/s/m-dLZGAvY5BdVRfVWSpS2g

C++11的异步操作不只是thread

https://zhuanlan.zhihu.com/p/58976871

编程风格之声明式与命令式的区别

https://www.zhihu.com/question/447592340

C语言的源程序是可以直接运行吗？（C语言的解释执行）

https://zhuanlan.zhihu.com/p/346465585

极大提高你开发效率的C++ tricks

https://www.zhihu.com/question/280665935

为什么C/C++要分为头文件和源文件？

# 汇编

https://mp.weixin.qq.com/s/OWGi1htNugOv81ZFPinRGw

汇编实现的memcpy和memset

https://mp.weixin.qq.com/s/6RoQAPsenD7Pu9enTqGeoQ

移动端arm cpu优化学习笔记之内联汇编入门

https://mp.weixin.qq.com/s/gr6YKmxbZjwfB4Rft1w55A

一口气看完45个寄存器，CPU核心技术大揭秘

https://mp.weixin.qq.com/s/504MLGjCESZPOvv8AwY6Pw

这篇寄存器讲的有点意思
