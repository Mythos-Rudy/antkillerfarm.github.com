---
layout: post
title:  数学狂想曲（十三）——最速降线, 泛函 & 变分, 软件滤波算法
category: math 
---

# 最速降线

约翰·伯努利在1696年提出最速降线的问题（problem of brachistochrone），向全欧洲数学家征求解答。这个问题最早由伽利略在1630年提出：**“一个质点在只受重力的作用下，从一个给定点A到不在它垂直下方的另一点B，问沿着什么曲线下滑（忽略摩擦力）所需时间最短？”**

然而伽利略自己给出的答案是错误的：他认为这条曲线是过AB的圆弧。这条曲线也不是连接AB两点的直线，尽管AB间线段最短，但小球滚下来的时间不是最短。

伯努利把此问题发布在Acta Eruditorum上，他还这么说：

“我，约翰·伯努利，想找到世界上最出色的数学家。对聪明人而言，没有什么能比一道诚实而富有挑战性的难题更有吸引力，其可能的解决方案将会成为一个永恒的纪念碑。按照帕斯卡，费马等人设定的例子，请允许我代表整个数学界将这个尤其能在今天考验大家的数学技巧和思维耐力的问题展示在最优秀的数学家面前。如果有人能把答案递交与我，我会将其公开，并授予其应得的奖赏。”

伯努利原定的截止期限是1696年年底，可是他只受到了一份来自他的老师莱布尼兹的解答。莱布尼兹要求伯努利将截止期限延长到来年复活节（大致在3月下旬到4月下旬之间），以便让欧洲数学家们有更多时间来充分解决此道难题。约翰·伯努利亲自把最速降线问题抄了一份，装进信封寄给在英国的牛顿。

1697年1月29日，牛顿正在造币局里忙着改铸新币的工作。下午4点回到家里，他看到了邮箱里伯努利寄来的问题。尽管牛顿非常疲惫，他立即彻夜未眠的投入研究，在凌晨4点时得到问题的解答。他将他的解答寄给好友兼皇家协会主席查尔斯，随后皇家协会以匿名的形式发表在Philosophical Transactions上。

要知道，此时的牛顿已经56岁，工作重点是皇家铸币厂监管。即使如此，在忙了一天的本职工作后，牛顿还是用几个小时就解决了欧洲许多数学家都无法解出的难题。约翰·伯努利本人也花了两个星期的时间才完成解答。

1697年复活节的截止期限，伯努利共收到了5份答案，他自己和其老师莱布尼兹，第三份是他的哥哥雅可布·伯努利，洛必达是第四个，最后是一份匿名答案。伯努利在阅读最后一份解答时立即认出它的作者，他惊叹道：

**“从利爪上认出了这头狮子（recognizes a lion from his claw mark）”**

在给查尔斯的信里，牛顿还写道：**我不喜欢在数学上被外国人糊弄（I do not love to be dunned and teased by foreigners about mathematical things）。**

除了牛顿之外，雅可布·伯努利也是约翰·伯努利最想击败的对手。事实上，三个人虽然都正确回答了该问题，然而所用的方法竟然全都不同。下面提到的变分法，主要是雅可布·伯努利的贡献。

言归正传，最速降线的正确答案是——**摆线（Cycloid）：一个圆在一条定直线上滚动时，圆周上一个定点的轨迹，又称圆滚线、旋轮线。**

![](/images/img3/Cycloid.jpg)

伽利略虽然在最速降线问题上给出了错误的答案，然而他本人对于摆线还是研究颇深的。事实上，摆线的名字就是他起的（1599年）。

他还发现了以下结论：

1.摆线弧的长度等于旋转圆的直径的4倍。

2.摆线弧下方所围成的面积是旋转圆的面积的3倍。

在没有微积分的时代，他是如何发现这些结论的呢？答案：做实验。

是的，你没看错，就是实验。他用一根绳子附在摆线度量出这条绳子的长度再与旋转圆的直径作比较，得到了第一个事实；在一块薄板上画出摆线所围成的图形，再把这个图形切下来，称一下它的重量，然后在同样的薄板上画出旋转圆，再把旋转圆切下来，称一下重量，于是发现了第二条事实。

注意，伽利略虽然发现了摆的等时性，然而他用的摆是圆摆。直到惠更斯改进钟摆，钟摆和摆线才有了关系。这从摆线的英文名可以看的很清楚。伽利略显然采用的是圆滚线的定义。

http://www.docin.com/p-270302534.html

应用斯涅尔公式求解最速下降曲线问题研究

虽然我早就知道国内的论文比较水，但是这样明目张胆的抄袭Johann Bernoulli 300年前的证明的，这还是头一次见。

<a name="Variations"/>

# 泛函 & 变分

历史上对于最速降线的研究催生了泛函数（Functionals）和变分法（Calculus of Variations）的概念。

这里就以最速降线为例，说明一下泛函和变分的含义。

首先建立坐标系，水平方向为x轴，竖直方向为y轴。

则质点下落速率与下落高度间的关系为：

$$v=\sqrt{2gh}\Rightarrow \frac{\mathrm{d}s}{\mathrm{d}t}=\sqrt{2gy}$$

所以：

$$T=\int_{t_1(A)}^{t_2(B)}\mathrm{d}t=\int_{A}^{B}\frac{\mathrm{d}s}{\sqrt{2gy}}=\int_{A}^{B}\frac{\sqrt{1-y'^2}}{\sqrt{2gy}}\mathrm{d}x$$

显然，这是一个路径积分。

上式可改写为以下形式：

$$T=T[y(x)]=\int_{A}^{B}\frac{\sqrt{1-y'^2}}{\sqrt{2gy}}\mathrm{d}x=\int_{A}^{B}F(x,y,y')\mathrm{d}x$$

注意，这里的$$T[y(x)]$$不能理解为复合函数：

1.复合函数的变换是$$x\to y \to T$$。其中，x、y、T都是数值。换句话说，就是**数值的传递**。

2.在这个问题中，y的具体值，意义不大，如何到达y的路径才是关键。而路径其实可以表达为一个函数，即y是x的函数，而T是x的**函数的函数（也被称为“泛函”）**。

**泛函求极值的方法和过程，被称作变分法。**上述最速降线问题，实际上就是在一个泛函集合上求极值的问题。

对于任意定值$$x \in [x_0,x_1]$$，可取函数$$y(x)$$与另一可取函数$$y_0(x)$$之差$$y(x)-y_0(x)$$，称为函数$$y(x)$$在$$y_0(x)$$处的**变分或者叫函数的变分**，记作$$\delta y$$，其中$$\delta$$称为变分算子，那么：

$$\delta y = y(x)-y_0(x)$$

从上面的定义可以看出函数的变分$$\delta y$$与函数的增量$$\Delta y$$之间的区别：

1.函数的变分$$\delta y$$是两个不同的函数$$y(x)$$和$$y_0(x)$$在自变量x固定时的差，这是函数发生了改变。

2.函数的增量$$\Delta y$$是自变量x的增量使得函数$$y(x)$$产生的增量，函数依然是原来的函数。

被积函数F被称为**泛函的核**。

核的三要素：

1.自变量x。可以有多个自变量。

2.函数y。也可以是多个。

3.y的导数。可以是多个，也可以是高阶导数。

最速降线问题由于只涉及y的一阶导数，因此又被称为**一阶变分**问题。

这类问题是最简单的变分问题，它的极值通常符合Euler–Lagrange equation：

$$F_y-\frac{d}{dx}F'_y=0$$

泛函极值问题的求解方法，除了变分法之外，常见的还有动态规划和最优控制。

教程：

《变分法基础》，老大中著。

>老大中，北京理工大学宇航学院发射与推进工程系副教授。

参考：

https://zhuanlan.zhihu.com/yueaptx

一个变分法方面的专栏

https://blog.csdn.net/shenziheng1/article/details/54808173

泛函与变分初步（Euler-lagrange条件）

https://www.cnblogs.com/MagicXYoung/p/4906606.html

泛函与变分基础

https://blog.csdn.net/theonegis/article/details/86217916

变分法入门介绍

https://zhuanlan.zhihu.com/p/41573146

变分法理解1——泛函简介

https://zhuanlan.zhihu.com/p/41810184

变分法理解2——基本方法

# 软件滤波算法

## 限幅滤波法

方法：根据经验判断，确定两次采样允许的最大偏差值（设为A），每次检测到新值时判断：如果本次值与上次值之差<=A，则本次值有效，如果本次值与上次值之差>A，则本次值有效，放弃本次值，用上次值代替本次值。

优点：能有效克服因偶然要素惹起的脉冲干扰。

缺点：无法抑制那种周期性的干扰，平滑度差。

## 中位值滤波法

方法：连续采样N次（N取奇数），把N次采样值按大小陈列，取中位值（第$$\frac{(N-1)}{2}$$个值）为本次有效值。

优点：能有效克服因偶然要素惹起的波动干扰，对变化缓慢的被测参数有良好的滤波效果。

缺点：对快速变化的参数不宜。

## 算术平均滤波法

方法：连续取N个采样值进行算术平均运算，N值较大时：信号平滑度较高，但灵敏度较低；N值较小时：信号平滑度较低，但灵敏度较高。

优点：适用于对普通具有随机干扰的信号进行滤波，这样信号的特点是有一个平均值，信号在某一数值范围附近上下波动。

缺点：对于测量速度较慢或要求数据计算速度较快的实时控制不适用，比较浪费RAM 。

## 递推平均滤波法（又称滑动平均滤波法）

方法：把连续取的N个采样值看成一个队列，队列的长度固定为N，每次采样到一个新数据放入队尾，并扔掉原来队首的一次数据(先进先出) 。把队列中的N个数据进行算术平均运算，就可获得新的滤波结果。

优点：对周期性干扰有良好的抑制效用，平滑度高，适用于高频振荡系统。

缺点：灵敏度低，对偶然出现的脉冲性干扰的抑制效用较差，不易消弭由于脉冲干扰所引起的采样值偏差，不适用于脉冲干扰比较严重的场合，比较浪费RAM。

## 中位值平均滤波法（又称防脉冲干扰平均滤波法）

方法：相当于“中位值滤波法”+“算术平均滤波法”，连续采样N个数据，去掉一个最大值和一个最小值，然后计算N-2个数据的算术平均值。。

优点：融合了两种滤波法的优点，对于偶然出现的脉冲性干扰，可消弭由于脉冲干扰所惹起的采样值偏差。

缺点：测量速度较慢，和算术平均滤波法一样，比较浪费RAM。

## 限幅平均滤波法

方法：相当于“限幅滤波法”+“递推平均滤波法”，每次采样到的新数据先进行限幅处理，再送入队列进行递推平均滤波处理。

优点：融合了两种滤波法的优点，对于偶然出现的脉冲性干扰，可消弭由于脉冲干扰所惹起的采样值偏差。

缺点：比较浪费RAM。

<a name="Filter"/>

## 一阶滞后滤波法

方法：取a=0~1，本次滤波结果=(1-a)*本次采样值+a*上次滤波结果。

优点：对周期性干扰具有良好的抑制造用，适用于波动频率较高的场合。

缺点：相位滞后，灵敏度低，滞后程度取决于a值大小，不能消弭滤波频率高于采样频率的1/2的干扰信号。
