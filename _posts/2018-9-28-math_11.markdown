---
layout: post
title:  数学狂想曲（十一）——高阶统计, 勾股定理, PID算法, 数学杂谈
category: math 
---

# 高阶统计（续）

在介绍Cumulants之前，我们首先看一下Moment-generating function：

$$M_X(t) := \operatorname E \left[e^{tX}\right], \quad t \in \mathbb{R}$$

可以看出，MGF和《数学狂想曲（二）》中提到的随机变量的特征函数（Characteristic function, CF）的形式非常类似。

而cumulant-generating function则是MGF的对数，即：

$$K(t)=\log\operatorname{E}\left[e^{tX}\right]$$

对上式进行Maclaurin展开，可得：

$$K(t)=\sum_{n=1}^\infty \kappa_{n} \frac{t^{n}}{n!} = \mu t + \sigma^2 \frac{t^2}{2} + \cdots$$

这里的$$\kappa_{n}$$就是Cumulants了。

由MGF和CF的关系易知，使用CF的对数的Maclaurin展开，也可以求Cumulants。

Cumulants有如下性质：

$$cum(\lambda_1x_1,\dots,\lambda_kx_k)=\sum_{i=1}^k\lambda_i cum(x_1,\dots,x_k)\tag{1}$$

其中，$$\lambda_i$$为常数。

$$cum(x_1,\dots,x_k)=cum(x_{i_1},\dots,x_{i_k})\tag{2}$$

其中，$$(i_1,\dots,i_k)$$为$$(1,\dots,k)$$的任意一种排列。

$$cum(x_0+y_0,z_1,\dots,z_k)=cum(x_0,z_1,\dots,z_k) + cum(y_0,z_1,\dots,z_k)\tag{3}$$

如果$$\alpha$$为常数，则：

$$cum(\alpha+z_1,\dots,z_k)=cum(z_1,\dots,z_k)\tag{4}$$

如果$$x_i$$与$$y_i$$相互独立，则：

$$cum(x_1+y_1,\dots,x_k+y_k)=cum(x_1,\dots,x_k)+cum(y_1,\dots,y_k)\tag{5}$$

## Polyspectrum

Polyspectrum一般翻译成高阶谱或者多谱。

>吐槽一下，我最早看的一本书把Polyspectrum翻译成多谱，结果我以此为关键词搜索，基本一无所获。直到我发现它还有另一个中文名。。。

以上讨论的是Cumulants的一般定义，在处理离散时间随机过程的时候，我们往往采用如下形式的定义。



## 参考

https://www.zhihu.com/question/25344430

随机变量的矩和高阶矩有什么实在的含义？

https://www.zhihu.com/question/43469699

信号的矩和高阶累积量的定义是什么？

http://www.doc88.com/p-1127198771359.html

高阶累积量与高阶谱读书笔记

https://wenku.baidu.com/view/7c4931085727a5e9856a6139.html

高阶谱分析

https://wenku.baidu.com/view/136b666c561252d380eb6e8c.html

高阶统计量的定义与性质

# 勾股定理

勾股定理在西方被称为Pythagorean theorem。它的命题本身并不复杂，也就是初中几何的内容，但是内涵非常丰富。即使大学数学也未必能穷尽其中的奥妙。这里仅罗列一二。

>Pythagoras of Samos，约570 BC～约495 BC，古希腊哲学家。那时候的哲学家比现在牛多了，通常都是兼通数门学科的宗师级人物。

使用勾股定理定义的距离，也就是通常的Euclidean Distance。之所以用Euclid命名是因为：**勾股定理实际上和Euclid几何的平行公理是等价的。**

Euclidean Distance => 最小二乘法 => 正态分布

所以GMM隐含使用了Euclidean Distance。

不满足勾股定理的几何，也就是非欧几何。但实际上，Euclid对于其中的特例——球面几何，也有一定的研究。比如，著名的“**球面三角形相似必全等**“，就是他发现的。

# PID算法

PID算法是自动控制领域最基础应用也最广泛的算法。它是三个单词proportional（P，比例）、integral（I，积分）和differential（D，微分）的缩写。

PID算法的流程如下图所示：

| 图1 |
|:--:|
| ![](/images/article/PID.png) |

以下我们以水箱水龙头为例，解释一下PID算法的各个要素。

**场景1**：假设我们面对的系统是一个简单的水箱的液位，要从空箱开始注水直到达到某个高度，而你能控制的变量是注水龙头的开关大小。

图1中的$$r(t)$$表示期待的设定值，在这个场景中，就是水箱的液位。$$y(t)$$表示当前的液位。$$e(t)=r(t)-y(t)$$表示误差值。

针对这个场景，我们可以设计如下算法：

水箱液位离预定高度远的时候开关开大点，离的近的时候开关就开小点，随着液位逐步接近预定高度逐渐关掉水龙头。用数学表示就是：

$$u(t) = K_\text{p} e(t)\tag{1}$$

上式中的$$u(t)$$表示需要控制的量，在这里就是水龙头的开合度。$$K_\text{p}$$被称为比例系数。

**场景2**：假设这个水箱不仅仅是装水的容器了，还需要持续稳定的给用户供水。

以下用c表示给用户供水的量($$c\ge 0$$)。显然如果使用公式1，则系统稳定时，$$u(t)-c=0$$，即$$K_\text{p} e(t)=c$$。

由于c和$$K_\text{p}$$都不为0，因此$$e(t)$$也不为0，这就导致始终无法加注到指定水位。这种稳态误差被称为静差。

为了平衡c，我们修改算法为：

$$u(t) = K_\text{p} e(t) + K_\text{i} \int_0^t e(\tau) \,d\tau\tag{2}$$

$$K_\text{i}$$被称为积分系数。积分环节的意义就相当于你增加了一个水龙头，这个水龙头的开关规则是水位比预定高度低就一直往大了拧，比预定高度高就往小了拧。如果漏水速度不变，那么总有一天这个水龙头出水的速度恰好跟漏水的速度相等了，系统就和第一小节的那个一样了。那时，静差就没有了。这就是所谓的积分环节可以消除系统静差。

**场景3**：假设用户的用水量是变化的，即$$c(t)$$。

这时，如果仍采用公式2，则由于$$c(t)$$的变化，导致$$e(t)$$不恒为0。为了减小$$c(t)$$的变化，对$$e(t)$$的影响，我们继续修改算法：

$$u(t) = K_\text{p} e(t) + K_\text{i} \int_0^t e(\tau) \,d\tau + K_\text{d} \frac{de(t)}{dt}\tag{3}$$

$$K_\text{d}$$被称为微分系数。由于$$c(t)$$的变化不可能事先得知，因此，微分环节只能减小$$c(t)$$的变化所造成的影响，而不能消除。

公式3在Laplace域可写做：

$$L(s) = K_\text{p} + K_\text{i}/s + K_\text{d} s\tag{4}$$

从公式4可以看出，PID controller的数学原理和锁相环（Phase-locked loop）非常类似，它们实际上都是Feedback Control系统。

![](/images/article/PLL.png)

参考：

https://en.wikipedia.org/wiki/PID_controller

《Feedback Control of Dynamic Systems》，Gene F. Franklin，J David Powell，Abbas Emami-Naeini著。

>注：Gene F. Franklin，1927~2012，美国控制论学家。哥伦比亚大学博士，斯坦福大学教授。

>J David Powell，美国航空航天学家。斯坦福大学博士和教授。

>Abbas Emami-Naeini，斯坦福大学博士和讲师，SC Solutions公司总监。

https://www.zhihu.com/question/23088613/answer/23942834

如何通俗地解释 PID 参数整定？

http://blog.163.com/suyanqiang0613@126/blog/static/1100531332012111475650867/

PID算法原理

## 串级PID控制

实际使用中，为了改善PID控制的效果，一般还会用到串级PID控制。

参考：

https://blog.csdn.net/qq_25005909/article/details/77941243

串级PID控制四轴飞行状态-分析

https://blog.csdn.net/nemol1990/article/details/45131603

四轴PID讲解

# 数学杂谈

有一次正在做穿过欧洲的旅行，他与一个陌生人聊天，他很谦虚的自我介绍：“我是Daniel Bernoullis。”

那个人当时就怒了，说：“我还是Issac Newton（牛顿）呢。”

Daniel从此之后在很多的场合深情的回忆起这一次经历把他当作他曾经听过的最衷心的赞扬。

----

Klein和Poincare都在研究自守函数什么的，对于2维的情况，Poincare把自己的结果用Fuchs的名字来命名，因为这个人的东西他曾经看过，并且有很大的影响，Klein感到特别的不爽，他也得到了这样的结果。然而，Fuchs本人对此却一无所知，如此冠名，他自然觉得很不妥。

后来，他和Poincare分别做3维的情况，无奈自己不是Poincare那样的天才，用功过度，体力不支，身体都垮了，从此结束了自己创造性的数学生涯。Poincare自己也不在乎这个东西，于是把3维自己得到的群命名为Klein群。

----

高斯给出了正十七边形可以尺规作图的理论可能性，然而他并不会做。第一个真正的正十七边形尺规作图法直到1825年才由约翰尼斯·厄钦格（Johannes Erchinger）给出。现在比较通行的做法是1893年Herbert William Richmond给出的。距离高斯给出证明（1801年），差不多过了100年。

----

https://mp.weixin.qq.com/s/zozViMoimcL6nJvyBnTQtQ

八岁小孩眼里的欧拉公式

这里讲的是拓扑学中的欧拉公式：V−E+R=2，然而成年人的世界里没有Easy这个词，V−E+R会不会等于其他数呢？于是就有了Euler characteristic。

----

《素数之恋》这本书不错，黎曼猜想的最佳科普读本。

Sir Michael Francis Atiyah，1929年生，英国籍黎巴嫩裔数学家。剑桥大学博士（1955），英国皇家学会会长（1990～1995），获得过Fields Medal(1966)和Abel Prize(2004)。

Atiyah的高中在埃及读的（1941～1945），当时欧洲很多人为了躲避战乱，逃到了那里。

----

有种素数叫做“工业级素数（Industrial-grade primes）”，定义是没有经过严格数学证明、但是通过了“可能素数判定法”（比如米勒-拉宾判定法）的整数。用这种方法判定大整数是否是素数不是完全准确，但速度非常快，而且不会漏掉任何素数。RSA加密法所需的大素数生成方式就很明显了：随机生成大整数，如果判断这个数可能是素数，再用精确但速度慢的素数判定法来判断这个数是否真的是素数。

https://www.zhihu.com/question/54779059

RSA生成公私钥时质数是怎么选的？

# 张量分析

在同构的意义下，第零阶张量（r = 0）为标量（Scalar），第一阶张量（r = 1）为向量（Vector），第二阶张量（r = 2）则成为矩阵（Matrix）。

《张量分析》，黄克智著。

>注：黄克智，1927年生，固体力学家。江西中正大学本科+清华硕士+莫斯科大学博士（因应召回国，放弃博士学位）。清华大学工程力学系教授、工程力学研究所所长，中国科学院院士。断裂力学领域权威。

# 拓扑学

《Topopogy Without Tears》，University of New South Wales的Sidney A. Morris著。

该书的中文版：

http://www.topologywithouttears.net/topbookchinese.pdf

# 莫比乌斯反演

http://blog.csdn.net/acdreamers/article/details/8542292

莫比乌斯反演

http://blog.csdn.net/litble/article/details/72804050

初涉莫比乌斯反演

http://blog.csdn.net/u013632138/article/details/52250567

莫比乌斯反演讲解

http://blog.csdn.net/Ripped/article/details/70263965

莫比乌斯反演详解

http://blog.csdn.net/hzj1054689699/article/details/51659994

莫比乌斯反演入门

http://blog.csdn.net/outer_form/article/details/50588307

莫比乌斯反演定理证明
