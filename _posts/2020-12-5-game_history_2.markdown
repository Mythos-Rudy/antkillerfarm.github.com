---
layout: post
title:  我的PC Game（二）, 入行以来涉及的技术简史（二）
category: my story 
---

* toc
{:toc}

# 我的PC Game

## 2017.2

第1次在一张包里抽出两张橙卡：百变泽鲁斯和范达尔*鹿盔，虽然后者已经有了。

## 2018.1

CA出了Total War系列的新作《Total War: THREE KINGDOMS》的预告片，着实让我兴奋了一把，但估计我是没什么时间玩了。

>我现在才知道《Rome:Total War》中的背景女声吟唱曲叫做《Divinitus》。

## 2018.2

这两年工作日渐繁忙，最近忙里偷闲玩了一把RimWorld，还是那么给力。版本从2015.8的A11，变成了B18。

## 2018.9

最近推出的《太吾绘卷》似乎不错，可惜没有时间玩。

手游方面入坑《王国纪元》。

2019.2 《王国纪元》城堡升到25级。

2019.12 弃坑。

## 2019.7

全战系列出了三国篇，似乎很受欢迎，可惜还是没时间玩。这也是该系列第一次以中国为题材。

三国篇的第一个DLC是《八王之乱》，说实在的，题材蛮小众冷门的。几乎算是该时代背景第一次被搬上游戏。早先类似题材最近的也就是《苍之涛》的淝水之战了。

## 2020.5

现在业界似乎流行炒冷饭，诸多RTS游戏都推出了高清重制版，例如星际，魔兽3，帝国2，C&C。

## NES

本来NES是不能归类于PC Game的，但毕竟也是本人的童年记忆，就写一下了。

https://github.com/amhndu/SimpleNES

一个NES模拟器的代码

https://www.emuparadise.me/Nintendo_Entertainment_System_ROMs/13

NES ROM下载

2018年的时候，买了一个小霸王的NES复刻版。没错，小霸王现在还有卖。但是不得不说，技术毕竟已经进步了35+年，当年觉得精彩的游戏，其实也就那么回事了。。。

唯一值得称赞的是，商家附带的1000合1卡带，不像原先的伪劣产品，只是少数几个游戏不同关卡/配置的重复，这次是真有1000个游戏，好多游戏之前见都没有见过。。。

----

https://zhuanlan.zhihu.com/p/149266594

《三国志2霸王的大陆》：可能是最好玩的三国模拟游戏

这算是当年的巨型游戏了，由于耗时较长，卡带上甚至准备了纽扣电池。但由于穷，没钱买电池。。。囧

尝试过和同学一次性玩了12个小时，但是也就打了几仗，占了数城而已。孔明一直没等到。。。

## 2020.12

岁数大了，除了偶尔玩两把《魔兽3》，基本告别游戏，包括手游了。下面的内容，主要来自于公司的年轻人的讨论。

首先是Nintendo Switch，主要是一些小游戏。大作包括《塞尔达传说》。

还有近来的PC游戏《赛博朋克 2077》，了解了一下游戏的制作公司“波兰蠢驴”。

https://www.zhihu.com/question/62038731

你这么看波兰蠢驴这个公司？

## Other

https://www.zhihu.com/question/39626359

为什么澄海3C没有成为DOTA一样成功的作品？

https://zhuanlan.zhihu.com/p/325972017

STEAM上的科研游戏，真是给正常人玩的？

https://mp.weixin.qq.com/s/NFYlupa0piLjcWrRaP-C-Q

中年失业破产后当雇佣兵、倒卖煎饼果子，游戏里的打工人也这么难？

https://github.com/skywind3000/preserve-cd

绝版游戏保护工程

# 入行以来涉及的技术简史（续）

### 3）QT

同上。

### 4）.NET

.NET使用了一套与MFC不同的GUI框架。从接口来看，其实更像是MS的死敌Borland的VCL的那套东西。现在使用这个编写PC工具似乎已经非常普遍了，而且随着应用的广泛，目前自带.NET Framework的PC也越来越多。很多时候，我们只用发布程序就好了。同事W算是这方面的高手，基本上这边的PC工具有八成都是他主导制作的。将公司在这方面的水准提升了一个台阶。

### 5）GTK

这是去年下半年开始自学的GUI框架。主要原因是目前已有部分工作转移到Linux下，总要有个称手的GUI框架才好。其次，目前的工具代码，大多是copy自产品代码的某一部分。产品使用gcc作为编译器，而gcc的语法和VC也不尽相同。产品代码中使用的比较多的局部动态数组，VC到目前仍不支持。

## 3.移动平台

工作以来，一直在嵌入式领域打拼，也经历了不少的移动平台，罗列如下：

### 1）Wince/Windows Mobile

这是接触的第一个移动平台，在学校的时候，我甚至连SD卡都没见过。应该说Windows Mobile是iOs和Android崛起之前，最高端大气的移动平台。由于API与Win32 API高度兼容，上手难度也不高，着实风光了一把。同期的竞争对手Symbian由于对触摸屏的支持不好，加之硬件规格较低，对于导航地图之类的当时的“超级应用”来说，还是有些力不从心的。

### 2）Nucleares/Brew/MTK/Symbian S60/Symbian UIQ/Moblin

这些平台没有做过大的项目，但是看过其中的应用代码。应该说这些都是iOS和Android出现之前，功能手机和嵌入式设备的主流系统。

### 3）Android

没有在该平台上开发过商业产品。但是作为从其诞生之初就一直在关注的人士。无论对它的应用层，还是对它的中间层和驱动层都有一定的了解。基本上从见到Android的第一眼开始，我就预见到Nokia和黑莓的衰败。即便黑莓在稍后的2009～2010年达到它的顶峰，也不曾让我改变观点。

### 4）RTKE

这是飞利浦开发的一个实时内核，我在S公司工作期间主要用于手机基带芯片的控制。当时公司投入很大精力，想在一颗处理器上集成基带处理和应用处理的功能，其软件核心是在RTKE的基础上，搭建一个Linux虚拟机以运行Android应用。这个项目的初衷是推出千元以下的手机。但是后来随着硬件性能的提升和价格的下降，千元以下的手机的确是做出来了，但实际上所用的处理器的个数不仅没有减少，反而越来越多。PS:RTKE的用途不仅于此，有同事说他之前在其他公司也用过RTKE，然后细谈才知道飞利浦的剃须刀上用的也是RTKE。

## 4.其他

研究生时代研究过CORBA技术，主要用于通信运营商的网管系统的应用。工作之后，很久都没有听说过这个名词。前段时间，在招聘网上，搜了一下，发现CORBA技术本身并未灭绝，但是用途居然还是局限在网管系统的应用上。而且由于体系的庞大低效，原先使用CORBA构筑的GNOME桌面等PC程序，也将IPC转为更高效（但不通用，也不支持联网）的DBUS技术了。

## 2018.8

https://coolshell.cn/articles/3008.html

Windows编程革命简史

这篇文章谈到的这些东西，我基本都经历过。ATL算是我曾经花费很长时间去学，但却最终没学会的东西。好在从事后的角度看，这东西也没多少公司用。可能安全领域用的比较多吧，比如网银插件。

当然，这些年也遇到了一些绕了一圈最终逃不过的技术。比如GPU里面的shader技术，当初做3D GIS用到过，现在做AI计算又遇到了。

## 2018.9

尽管我从未涉足游戏开发行业，但不可否认的是，游戏开发是我许多年前报考CS专业，并从事相关工作的初心。

2015年的时候，由于当时工作比较轻松，自己也进入了技术进步的瓶颈期。于是以玩票心态，操练了一下游戏开发，其实就是cocos2d-x和box2d，还为后者提供了中文手册，并被原作者接受为官方版本。

之后由于兴趣转移，加上自己也意识到错过了入行的最佳时间，遂搁置之。不料，3年之后，cocos2d-x已经败下阵来，江湖的主角换成了Unity和UE。。。

此间，还短暂接触了crossapp——一个在cocos2d-x上改造而成的跨平台UI库。不料，cocos2d-x的作者对这种用法很不赞成：

>因为app开发是：如果没事的话我就不刷新屏幕了。游戏引擎是：尽量每秒60帧刷新速度除非你叫我停下来。换句话说，app是事件驱动刷新的，游戏是自循环驱动刷新的。带来的结果就是耗电量、发热量等完全不同。

## 2019.1

我对于大数据平台一直很有兴趣，但由于工作内容更偏向于算法和DL，因此平台类的技术栈都只是略知一二的水平。

不得不说，平台类的技术栈更新换代十分迅速。2016年，还是Hadoop/Hbase的天下，Spark开始发力，OpenStack则已经走下坡路。到了2018年，主角换成了Docker、Kubernetes、Flink。

回顾2年前第一个舆情分析项目，自己对于NLP、DL一无所知，对于ML也只有肤浅的认识。仅仅凭借同事的一句提示——Solr，开始闷头开荒，一路下来竟也让我闯出了一番新天地。

那个时代的我对于分词用的HMM，也曾顶礼膜拜。如今想来，恍如隔世。

# 并行 & 框架+

https://mp.weixin.qq.com/s/_85oWK2plv2QOX5Qfg_-ZA

大规模机器学习优化，195页ppt与视频

https://mp.weixin.qq.com/s/soruo90Dbtzi6d1kA63Akg

阿里提出智能算力引擎DCAF，节省20%GPU算力

https://zhuanlan.zhihu.com/p/79030485

AllReduce算法的前世今生

https://mp.weixin.qq.com/s/oDak7peTT5ynNYrH7LSWTg

分布式层次GPU参数服务器架构

https://mp.weixin.qq.com/s/4XMVYXnzpYZ4DrIabuTUig

Ring All-reduce: 分布式深度学习的巧妙同步

https://zhuanlan.zhihu.com/p/28226956

浮点峰值那些事儿

https://zhuanlan.zhihu.com/p/285994980

针对深度学习的GPU共享

https://mp.weixin.qq.com/s/Np4w7RC2JFlB7ZGIduu71w

爱奇艺机器学习平台的建设实践

https://mp.weixin.qq.com/s/9k6PDusoDHjmz58HAZxZcw

GPipe: 小批量流水线带来的大模型训练

https://mp.weixin.qq.com/s/DwjvEn04lGzKU8mDu-5q4g

大幅提升训练性能，字节跳动与清华提出新型分布式DNN训练架构

https://mp.weixin.qq.com/s/dJa5zOXgJJQOM5uWog3JZA

Local Parallesim：一种新并行训练方法

https://zhuanlan.zhihu.com/p/335116835

推荐系统Serving架构分析

https://mp.weixin.qq.com/s/DdsJ-ZB_cX9UhbQNK6dCag

分布式深度学习训练网络综述
