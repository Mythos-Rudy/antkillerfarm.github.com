---
layout: post
title:  Machine Learning之Python篇（四）, 多维数组的行优先和列优先
category: AI 
---

# Machine Learning之Python篇

https://mp.weixin.qq.com/s/xYNCKy36n8CoaGzABlI5Wg

从零开始用python搭建推荐引擎

https://mp.weixin.qq.com/s/vAn_rnUt036-3jy7ZahF8w

文本挖掘，带你看金庸笔下不一样的恩怨情仇

https://mp.weixin.qq.com/s/84Rk5CP2uLaCBIifL465VQ

从统计到概率，入门者都能用Python试验的机器学习基础

https://mp.weixin.qq.com/s/O9QDUNXftZeEohxiW6LtZw

朴素贝叶斯详解及中文舆情分析

https://mp.weixin.qq.com/s/wIaDAewwOBMPRDr28DqGoQ

Feature Tools：可自动构造机器学习特征的Python库

https://mp.weixin.qq.com/s/zfAVXJJmvHgi3JkM_ryDVA

Python高效数据分析的8个技巧

https://mp.weixin.qq.com/s/Ke3K3i8paNlweciJepiuwQ

复旦中文文本分类过程

https://mp.weixin.qq.com/s/Ij9L-swxx6gmaEH4YQb0tQ

如何用Python检测视频真伪？

https://mp.weixin.qq.com/s/5YHyM7gILvCItScvYYoANQ

Python实现文字转语音功能

https://mp.weixin.qq.com/s/mABDO5Sxv-Wc-gAgDQAbFQ

用Python实现机器学习算法——简单的神经网络

https://mp.weixin.qq.com/s/chT6mWmH1_zE-eH1vdB01A

是技术也是艺术 使用geopandas玩转地图可视化

https://mp.weixin.qq.com/s/JMcn3PRcWdT2PpE6PTSzfA

基于geopandas的空间数据分析—geoplot篇(下)

https://mp.weixin.qq.com/s/6wp4rlBODJAkYf3O4O-2GA

SciPy库以及图像高斯模糊实战

https://mp.weixin.qq.com/s/8idFi0W7eJx9XDti48B9WQ

Python自动生成表情包

https://mp.weixin.qq.com/s/NJed2PbqBU8utLq8HQxctQ

一个Python自动提取内容摘要的实践

https://mp.weixin.qq.com/s/yBmpdtYJ0B5iq00dKvIprw

一文教你构建图书推荐系统

https://mp.weixin.qq.com/s/9kHXBJAXsvEi58WwqrjvBg

Python代码和贝叶斯理论告诉你，谁是最好的棒球选手

https://mp.weixin.qq.com/s/NIOLuK8-ctvncglmpIOEhQ

用Python入门不明觉厉的马尔可夫链蒙特卡罗

https://mp.weixin.qq.com/s/Ljo36772QTUDKuRrxIRmmw

100多个Jupyter精选资源，有人整理在一个GitHub项目里！

https://mp.weixin.qq.com/s/8XDXgIm-Zcb3dL-2h9eSjA

用Python构建NLP Pipeline，从思路到具体代码，这篇文章一次性都讲到了

https://mp.weixin.qq.com/s/8H8GrAe7wMaLGWKjKUVp2Q

用文本分类模型轻松搞定复杂语义分析

https://mp.weixin.qq.com/s/ss9UlDU9lYokS-EDrPnOxQ

如何在Python中使用LightFM构建可扩展的电子商务推荐系统？

https://mp.weixin.qq.com/s/tzyj0LaJ2Ccv730UhJBdig

拿起Python，防御特朗普的Twitter！

https://mp.weixin.qq.com/s/tARJdv_ybTmVigTXPoeuYw

还在用Matplotlib? 又一可视化神器Altair登场

https://mp.weixin.qq.com/s/wwhjwQyM2r0F-hOIWV35pg

Python数据科学手册专题：线性回归

https://mp.weixin.qq.com/s/VZlrWwbU0nJIlSVa9PgMBQ

在Python中简洁使用CSV、JSON、XML

https://mp.weixin.qq.com/s/wD1BwpcVbzAJQqiWr1JueQ

用Scikit-Learn构建K-近邻算法，分类MNIST数据集

https://mp.weixin.qq.com/s/fb9LyEdMsfUBR6ctc1gdXA

Python模拟太阳-地球-月亮运动模型

https://mp.weixin.qq.com/s/VmLphhs8rGabdNXtvllgdQ

教你用Python实现简单监督学习算法

https://mp.weixin.qq.com/s/TglQzG1iE0keEGLKZ-pGIg

Python数据处理实战——使用Scikit-Learn进行多类文本分类

https://mp.weixin.qq.com/s/EL1lST59dVibr6vIbqkdzw

如何用200行Python代码换张脸

https://mp.weixin.qq.com/s/440osIoULBRDOHq7Bk8awA

一文带你了解Python集合与基本的集合运算

https://mp.weixin.qq.com/s/tJwgNXKVwoJby-WkeMeBqQ

40行Python代码实现“旅行者困境“演化过程

https://mp.weixin.qq.com/s/-s5K8gl4Xdjh_1xgTn9PZg

维基百科中的数据科学：手把手教你用Python读懂全球最大百科全书

https://mp.weixin.qq.com/s/LiilfmvA5YUaY3QUQD6odA

如何用Python将数据预处理速度提升2至6倍？

https://mp.weixin.qq.com/s/4s7lDKlQjV1mUoVv558Y7Q

面向云数据库，超低延迟文件系统PolarFS诞生了

https://mp.weixin.qq.com/s/VfmudolvWzQN4ghgnI2rZA

机器学习中Python库的3个简单实践——你的图片将由你来创造

https://mp.weixin.qq.com/s/goxciguoxcamTo2WyUd1Lg

大吉大利，今晚如何用Python解锁“吃鸡”的正确姿势

https://mp.weixin.qq.com/s/dQ75O2h1orGzKcaCSDWshQ

自然语言处理是如何工作的？一步步教你构建NLP流水线

https://mp.weixin.qq.com/s/dwxTla5iiYKvELrpbWf1yQ

8个Python高效数据分析的技巧

https://mp.weixin.qq.com/s/TYiqZvY25qxHcmEXRpqO5Q

如何用Python做自动化特征工程

https://mp.weixin.qq.com/s/lfkTryraR22INdPzR0sidg

基于协同过滤的推荐系统实战

https://mp.weixin.qq.com/s/n3gaWuJCt945ycmliJatpA

python语音识别指南终极版

https://mp.weixin.qq.com/s/pDTbiS8xFH0llUBaN1Mb_Q

如何用Python写一个贪吃蛇AI

https://mp.weixin.qq.com/s/WdYa7Q-yA-s_EO59YkYbqw

7个基本机器学习算法Python实现

https://mp.weixin.qq.com/s/EqLzNzzMcwq5SEyBoTsuug

11种NLP文本预处理Python代码，简洁实用

https://mp.weixin.qq.com/s/mCUdK4i6XGEyaWNCIWA-wQ

集五福，我用Python

https://mp.weixin.qq.com/s/6x5Wmpy4Im0x3Ddua9rvFw

用python怎样识别验证码？传统方法，非DL

https://mp.weixin.qq.com/s/Xksp457JBr2ySrtqgXYMFw

一文学会入门推荐算法库surprise

# 多维数组的行优先和列优先

这里以numpy为工具，介绍一下多维数组的行优先和列优先的概念。

首先我们生成一个3x4的数组：

`arr = np.arange(12).reshape(3,4)`

它的形状是这样的：

![](/images/article/arr_3x4.png)

如果我们按照C语言的方式存储它，也就是行优先存储的话，那么在内存中，它的形状是这样的：

![](/images/article/arr_3x4_C.png)

这种存储方式又被称作C contiguous array。

另一派存储方式，也就是列优先存储，它的代表是Fortran语言。上面的数组在内存中的形状就是这样的了：

![](/images/article/arr_3x4_Fortran.png)

这种存储方式又被称作Fortran contiguous array。

上述描述也可用下图表示：

![](/images/img2/Row_and_column_major_order.png)

numpy对这两种方式都支持，而且还巧妙的利用了两者之间的差异，对运算进行了简化。

`arr2 = arr.T`

比如上述转置操作，你以为numpy真的做了转置运算吗？其实不然。

```python
>>>arr.flags.f_contiguous
False
>>>arr2.flags.f_contiguous
True
```

看到没，这里仅仅设置了一个标志而已。

C和Fortran的这种差异，实际上是上世纪60年代，两大IT巨头AT&T和IBM之间战争的结果，并深远的影响了后来的软件。比如在通用计算领域，主要采用C格式，而数值计算领域，则多采用Fortran格式。

典型的例子是Matlab。它最早是作为一些Fortran数学库的封装而存在的，因此很自然的采用了Fortran格式。OpenGL、OpenVX之类的接口，实际上也沿袭了这种路径依赖。

Fortran作为最早的高级语言（1957年），至今仍有很强的生命力，这主要归功于：

1.对数组、复数等数值计算的原生支持。这些语法糖，对于非程序员的科技人员很友好。

2.没有指针等复杂特性。这一点既降低了上手的门槛，又对于编译器优化（尤其是现在比较流行的并行计算优化）很有好处。普通科技人员即使没有经过特殊的程序训练，也可以写出非常高效的程序。
